{"version":3,"sources":["flowcontent.js","App.js","index.js"],"names":["initializeIcons","FlowContent","props","stackTokens","childrenGap","stackStyles","root","firstStackStyles","containerStackStyles","stackItemStyles","width","display","alignItems","justifyContent","elements","data","token","id","ID","continueFlow","listItems","tempContent","undefined","thereIsButton","some","element","type","console","log","map","Label","text","options","list","outputKey","Stack","wrap","tokens","styles","horizontal","option","i","PrimaryButton","style","onClick","e","value","TextField","label","name","onSubmit","callback","preventDefault","target","length","data1","separator","_submitForm","IconButton","iconProps","iconName","title","ariaLabel","disabled","App","JSON","parse","fetch","method","headers","body","stringify","then","r","json","res","setState","loading","catch","error","continueFlow_old","val","state","login","this","loginName","password","initFlow","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7117e351.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Stack, IStackTokens } from '@fluentui/react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { Label } from '@fluentui/react/lib/Label';\r\nimport { TextField } from '@fluentui/react/lib/TextField';\r\nimport { IconButton } from '@fluentui/react/lib/Button';\r\nimport { initializeIcons } from '@fluentui/font-icons-mdl2';\r\n \r\ninitializeIcons();\r\n\r\nfunction _submitForm(e, token, id, callback) {\r\n    e.preventDefault();\r\n    console.log(e.target.length);\r\n    var data1 = \"\";\r\n    var separator =\"\"; \r\n\r\n    if(e.target.length > 1 ){\r\n        for (var i = 0; i < e.target.length - 1; i++) {\r\n            data1 = data1 + separator + \"\\\"\" + e.target[i].id + \"\\\": \\\"\" + e.target[i].value + \"\\\"\";\r\n            separator =\",\";\r\n        }\r\n        data1 = \"{\" + data1 + \" }\";\r\n    }\r\n    else{\r\n        data1 = \"{}\";\r\n    }\r\n    console.log(\"data from submit:\");\r\n    console.log(data1);\r\n    callback(data1,token,id);\r\n  }\r\n  \r\nfunction FlowContent(props)  {\r\n    //console.log(props);\r\n    //const { IIconProps, IContextualMenuProps, Stack, Link, IconButton, ThemeProvider, initializeIcons } = window.FluentUIReact;\r\n    const stackTokens: IStackTokens = { childrenGap: 5 };\r\n    const stackStyles: Partial<IStackStyles> = { root: { } };\r\n    const stackButtonStyles: Partial<IStackStyles> = { root: { width: 230 } };\r\n    const nextIcon: IIconProps = { iconName: 'DoubleChevronRight8' };\r\n    const firstStackStyles: IStackStyles = {\r\n        root: {\r\n          \r\n        },\r\n      };\r\n      const containerStackStyles: IStackStyles = {\r\n        root: {\r\n\r\n        },\r\n      };\r\n      const textStyles: React.CSSProperties = {\r\n        width: 240,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n      };\r\n\r\n      const stackItemStyles: React.CSSProperties = {\r\n        ...textStyles\r\n      };\r\n      \r\n    const elements = props.data.elements;\r\n    const token = props.token\r\n    const id = props.data.ID\r\n    const continueFlow =  props.continueFlow\r\n    let listItems = \"loading...\";\r\n    let tempContent = \"\";    \r\n    if(elements !== undefined){\r\n\r\n        var thereIsButton = elements.some(element => element.type === \"select\");\r\n        console.log(\"thereIsButton:\" + thereIsButton);\r\n\r\n        tempContent = elements.map((element) => {\r\n            if(element.type === \"display\"){\r\n                return (<Label key={element.data.text}>{element.data.text}</Label>)\r\n            }\r\n            if(element.type === \"select\"){\r\n                let options = element.data.list\r\n                let outputKey = element.data.outputKey\r\n                return (\r\n                    <Stack wrap tokens={stackTokens} styles={containerStackStyles} key=\"buttons\">\r\n                        <Stack wrap horizontal  tokens={stackTokens} styles={firstStackStyles} key=\"buttons\">\r\n                        {options.map((option, i) => <PrimaryButton key={i}  style={stackItemStyles} text={option.text} onClick={(e) => continueFlow(\"{\\\"\" + outputKey + \"\\\":\\\"\" + option.value + \"\\\"}\",token,id)}/> )}\r\n                       </Stack>\r\n                    </Stack>\r\n                    \r\n                )          \r\n            }\r\n            if(element.type === \"input\"){\r\n                return (\r\n                    <Stack horizontal tokens={stackTokens} styles={stackStyles} key={element.data.outputKey + \"_stack\"}>\r\n                        <TextField label=\"\" name={element.data.outputKey} id={element.data.outputKey} key={element.data.outputKey}/>\r\n                    </Stack>                   \r\n                )          \r\n            }\r\n        });\r\n\r\n        if(!thereIsButton){\r\n            listItems = (<Stack horizontal tokens={stackTokens} styles={stackStyles}>\r\n                            <form onSubmit={(e) =>_submitForm(e,token,id, continueFlow)}>\r\n                                {tempContent}\r\n                                <IconButton iconProps={nextIcon} title=\"Next\" ariaLabel=\"Next\" type=\"submit\"/>\r\n                            </form>\r\n                        </Stack>)\r\n\r\n        }else{\r\n            listItems = (<Stack wrap tokens={stackTokens} styles={stackStyles}>{tempContent}</Stack>)\r\n        }\r\n\r\n    }   \r\n    else{\r\n        listItems = (<Label disabled>Flow is bij een eindpunt gekomen</Label>); \r\n    } \r\n\r\n    return (\r\n        <div key=\"flowcontent\">\r\n            {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlowContent","import React from 'react';\nimport { Component } from \"react\";\nimport FlowContent from \"./flowcontent\";\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      loading: true,\n      login: false,\n      token: '-',\n      data:{}\n    }\n  }\n\n  updateData(text) {\n    this.setState({ data: text })\n  }\n \n  /* login to access flows */\n  login() {\n    const loginData =    {\n        loginName: 'Eline.de.Groot@woonplezier.nu',\n        password: 'Woonplezier123'\n      };\n      console.log(\"login running\");    \n    fetch('https://teambp-test.azurewebsites.net/api/iris/auth', {\n        method: 'POST',\n        headers: {'Content-type':'application/json'},\n        body:JSON.stringify(loginData) \n      })\n      .then(r=>r.json()).then (res=>{\n        /* Initiate the flow */\n         this.initFlow({token: res.token});        \n      })\n      .catch((error) => {\n        console.error('Error:', error)\n      })\n  }\n\n  continueFlow = (data, token, id) => {\n    //var data1 = JSON.parse(\"{ \\\"\" + outputKey + \"\\\" : \\\"\" + val + \"\\\" }\");\n    console.log(\"continueFlow  running\");\n    console.log(data);\n    if(data !== \"\"){\n          data = JSON.parse(data);\n    }\n\n    fetch('https://teambp-test.azurewebsites.net/api/iris/flow/instance/'+id+'/continue?debug=true', {\n      method: 'POST',\n      headers: {'Authorization':'Bearer ' + token, 'Content-Type': 'application/json'},\n      body:JSON.stringify(data) \n    })\n    .then(r=>r.json()).then (res=>{\n        console.log(res);\n        this.setState({\n          loading: false,\n          token: token,\n          data: res\n        });    \n    })\n    .catch((error) => {\n      console.error('Error:', error)\n    })\n  }\n\n  continueFlow_old = (outputKey, val, token, id, data) => {\n    var data1 = JSON.parse(\"{ \\\"\" + outputKey + \"\\\" : \\\"\" + val + \"\\\" }\");\n    console.log(data1);\n\n    fetch('https://teambp-test.azurewebsites.net/api/iris/flow/instance/'+id+'/continue?debug=true', {\n      method: 'POST',\n      headers: {'Authorization':'Bearer ' + token, 'Content-Type': 'application/json'},\n      body:JSON.stringify(data1) \n    })\n    .then(r=>r.json()).then (res=>{\n        console.log(res);\n\n        this.setState({\n          loading: false,\n          token: token,\n          data: res\n        });        \n    })\n    .catch((error) => {\n      console.error('Error:', error)\n    })\n  }\n\n  componentDidMount(){\n    return this.login()  \n  }\n\n  initFlow(props) {\n       fetch('https://teambp-test.azurewebsites.net/api/iris/flow/instance/BeeindigenHuurContract/init', {\n      method: 'POST',\n      headers: {'Authorization':'Bearer ' + props.token},\n      body:JSON.stringify() \n    })\n    .then(r=>r.json()).then (res=>{\n        this.setState({\n          loading: false,\n          token: props.token,\n          data: res\n        });\n        //this.continueFlow({token:props.token});        \n    })\n    .catch((error) => {\n      console.error('Error:', error)\n    })\n    \n  }\n\n\n  render() { \n    //const s = this.state.loading? \"loading\": \"loaded\"\n    return (\n        <div key=\"main\">\n          <FlowContent data={this.state.data} token={this.state.token} continueFlow = {this.continueFlow} key={this.state.token} />       \n        </div>     \n      )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('content')\n);\n\n"],"sourceRoot":""}
{"version":3,"file":"useResponsiveMode.js","sourceRoot":"../src/","sources":["utilities/hooks/useResponsiveMode.tsx"],"names":[],"mappings":";;;;IAMA;;;OAGG;IACI,IAAM,iBAAiB,GAAG,UAAC,UAA+C;QACzE,IAAA,KAA8C,KAAK,CAAC,QAAQ,CAAiB,6CAAwB,CAAC,EAArG,kBAAkB,QAAA,EAAE,qBAAqB,QAA4D,CAAC;QAE7G,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;YACjC,IAAM,iBAAiB,GAAG,sCAAiB,CAAC,qBAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YAE3E,uDAAuD;YACvD,IAAI,kBAAkB,KAAK,iBAAiB,EAAE;gBAC5C,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;aAC1C;QACH,CAAC,EAAE,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC,CAAC;QAErC,IAAM,GAAG,GAAG,0BAAS,EAAE,CAAC;QACxB,wBAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,QAA+B,CAAC,CAAC;QAE3D,2CAA2C;QAC3C,KAAK,CAAC,SAAS,CAAC;YACd,QAAQ,EAAE,CAAC;YACX,qFAAqF;QACvF,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,kBAAkB,CAAC;IAC5B,CAAC,CAAC;IAtBW,QAAA,iBAAiB,qBAsB5B","sourcesContent":["import * as React from 'react';\nimport { getWindow } from '@fluentui/utilities';\nimport { useOnEvent } from '@fluentui/react-hooks';\nimport { ResponsiveMode, getResponsiveMode, getInitialResponsiveMode } from '../decorators/withResponsiveMode';\nimport { useWindow } from '../../WindowProvider';\n\n/**\n * Hook to get the current responsive mode (window size category).\n * @param elementRef - Use this element's parent window when determining the responsive mode.\n */\nexport const useResponsiveMode = (elementRef: React.RefObject<HTMLElement | null>) => {\n  const [lastResponsiveMode, setLastResponsiveMode] = React.useState<ResponsiveMode>(getInitialResponsiveMode);\n\n  const onResize = React.useCallback(() => {\n    const newResponsiveMode = getResponsiveMode(getWindow(elementRef.current));\n\n    // Setting the same value should not cause a re-render.\n    if (lastResponsiveMode !== newResponsiveMode) {\n      setLastResponsiveMode(newResponsiveMode);\n    }\n  }, [elementRef, lastResponsiveMode]);\n\n  const win = useWindow();\n  useOnEvent(win, 'resize', onResize as (ev: Event) => void);\n\n  // Call resize function initially on mount.\n  React.useEffect(() => {\n    onResize();\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only meant to run on mount\n  }, []);\n\n  return lastResponsiveMode;\n};\n"]}
{"ast":null,"code":"import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport { addDays, addWeeks, compareDates, findAvailableDate, DateRangeType } from '@fluentui/date-time-utilities';\nexport var CalendarGridDayCell = function (props) {\n  var _a, _b;\n\n  var navigatedDate = props.navigatedDate,\n      dateTimeFormatter = props.dateTimeFormatter,\n      allFocusable = props.allFocusable,\n      strings = props.strings,\n      activeDescendantId = props.activeDescendantId,\n      navigatedDayRef = props.navigatedDayRef,\n      calculateRoundedStyles = props.calculateRoundedStyles,\n      weeks = props.weeks,\n      classNames = props.classNames,\n      day = props.day,\n      dayIndex = props.dayIndex,\n      weekIndex = props.weekIndex,\n      weekCorners = props.weekCorners,\n      ariaHidden = props.ariaHidden,\n      customDayCellRef = props.customDayCellRef,\n      dateRangeType = props.dateRangeType,\n      daysToSelectInDayView = props.daysToSelectInDayView,\n      onSelectDate = props.onSelectDate,\n      restrictedDates = props.restrictedDates,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      onNavigateDate = props.onNavigateDate,\n      getDayInfosInRangeOfDay = props.getDayInfosInRangeOfDay,\n      getRefsFromDayInfos = props.getRefsFromDayInfos;\n  var cornerStyle = (_b = (_a = weekCorners) === null || _a === void 0 ? void 0 : _a[weekIndex + '_' + dayIndex], _b !== null && _b !== void 0 ? _b : '');\n  var isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n\n  var navigateMonthEdge = function (ev, date) {\n    var targetDate = undefined;\n    var direction = 1; // by default search forward\n    // eslint-disable-next-line deprecation/deprecation\n\n    if (ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n      direction = -1; // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1); // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n      direction = -1; // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    if (!targetDate) {\n      // if we couldn't find a target date at all, do nothing\n      return;\n    }\n\n    var findAvailableDateOptions = {\n      initialDate: date,\n      targetDate: targetDate,\n      direction: direction,\n      restrictedDates: restrictedDates,\n      minDate: minDate,\n      maxDate: maxDate\n    }; // target date is restricted, search in whatever direction until finding the next possible date,\n    // stopping at boundaries\n\n    var nextDate = findAvailableDate(findAvailableDateOptions);\n\n    if (!nextDate) {\n      // if no dates available in initial direction, try going backwards\n      findAvailableDateOptions.direction = -direction;\n      nextDate = findAvailableDate(findAvailableDateOptions);\n    } // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n    // don't jump the view unnecessarily\n\n\n    var isInCurrentView = weeks && nextDate && weeks.slice(1, weeks.length - 1).some(function (week) {\n      return week.some(function (dayToCompare) {\n        return compareDates(dayToCompare.originalDate, nextDate);\n      });\n    });\n\n    if (isInCurrentView) {\n      return;\n    } // else, fire navigation on the date to change the view to show it\n\n\n    if (nextDate) {\n      onNavigateDate(nextDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  var onMouseOverDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef, index) {\n      var _a;\n\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-hoverStyle');\n\n        if (!dayInfos[index].isSelected && dateRangeType === DateRangeType.Day && daysToSelectInDayView && daysToSelectInDayView > 1) {\n          // remove the static classes first to overwrite them\n          dayRef.classList.remove(classNames.bottomLeftCornerDate, classNames.bottomRightCornerDate, classNames.topLeftCornerDate, classNames.topRightCornerDate);\n          var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n\n          if (classNamesToAdd) {\n            (_a = dayRef.classList).add.apply(_a, classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  var onMouseDownDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef) {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  var onMouseUpDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef) {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  var onMouseOutDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef, index) {\n      var _a;\n\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n\n        if (!dayInfos[index].isSelected && dateRangeType === DateRangeType.Day && daysToSelectInDayView && daysToSelectInDayView > 1) {\n          var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n\n          if (classNamesToAdd) {\n            (_a = dayRef.classList).remove.apply(_a, classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  var onDayKeyDown = function (ev) {\n    var _a; // eslint-disable-next-line deprecation/deprecation\n\n\n    if (ev.which === KeyCodes.enter) {\n      (_a = onSelectDate) === null || _a === void 0 ? void 0 : _a(day.originalDate);\n    } else {\n      navigateMonthEdge(ev, day.originalDate);\n    }\n  };\n\n  var ariaLabel = dateTimeFormatter.formatMonthDayYear(day.originalDate, strings);\n\n  if (day.isMarked) {\n    ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n  }\n\n  return React.createElement(\"td\", {\n    className: css(classNames.dayCell, weekCorners && cornerStyle, day.isSelected && classNames.daySelected, day.isSelected && 'ms-CalendarDay-daySelected', !day.isInBounds && classNames.dayOutsideBounds, !day.isInMonth && classNames.dayOutsideNavigatedMonth),\n    ref: function (element) {\n      var _a;\n\n      (_a = customDayCellRef) === null || _a === void 0 ? void 0 : _a(element, day.originalDate, classNames);\n      day.setRef(element);\n    },\n    \"aria-hidden\": ariaHidden,\n    onClick: day.isInBounds && !ariaHidden ? day.onSelected : undefined,\n    onMouseOver: !ariaHidden ? onMouseOverDay : undefined,\n    onMouseDown: !ariaHidden ? onMouseDownDay : undefined,\n    onMouseUp: !ariaHidden ? onMouseUpDay : undefined,\n    onMouseOut: !ariaHidden ? onMouseOutDay : undefined,\n    role: \"presentation\" // the child <button> is the gridcell that our parent <tr> contains, so tell ARIA we are not\n\n  }, React.createElement(\"button\", {\n    key: day.key + 'button',\n    \"aria-hidden\": ariaHidden,\n    className: css(classNames.dayButton, day.isToday && classNames.dayIsToday, day.isToday && 'ms-CalendarDay-dayIsToday'),\n    onKeyDown: !ariaHidden ? onDayKeyDown : undefined,\n    \"aria-label\": ariaLabel,\n    id: isNavigatedDate ? activeDescendantId : undefined,\n    \"aria-current\": day.isSelected ? 'date' : undefined,\n    \"aria-selected\": day.isInBounds ? day.isSelected : undefined,\n    \"data-is-focusable\": !ariaHidden && (allFocusable || (day.isInBounds ? true : undefined)),\n    ref: isNavigatedDate ? navigatedDayRef : undefined,\n    disabled: !allFocusable && !day.isInBounds,\n    \"aria-disabled\": !ariaHidden && !day.isInBounds,\n    type: \"button\",\n    role: \"gridcell\" // create grid structure\n    ,\n    \"aria-readonly\": true,\n    tabIndex: isNavigatedDate ? 0 : undefined\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, dateTimeFormatter.formatDay(day.originalDate)), day.isMarked && React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: classNames.dayMarker\n  })));\n};","map":{"version":3,"sources":["components/CalendarDayGrid/CalendarGridDayCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport {\n  addDays,\n  addWeeks,\n  compareDates,\n  findAvailableDate,\n  IAvailableDateOptions,\n  DateRangeType,\n} from '@fluentui/date-time-utilities';\nimport { IDayInfo } from './CalendarDayGrid.base';\nimport { ICalendarGridRowProps } from './CalendarGridRow';\n\nexport interface ICalendarGridDayCellProps extends ICalendarGridRowProps {\n  day: IDayInfo;\n  dayIndex: number;\n}\n\nexport const CalendarGridDayCell: React.FunctionComponent<ICalendarGridDayCellProps> = props => {\n  const {\n    navigatedDate,\n    dateTimeFormatter,\n    allFocusable,\n    strings,\n    activeDescendantId,\n    navigatedDayRef,\n    calculateRoundedStyles,\n    weeks,\n    classNames,\n    day,\n    dayIndex,\n    weekIndex,\n    weekCorners,\n    ariaHidden,\n    customDayCellRef,\n    dateRangeType,\n    daysToSelectInDayView,\n    onSelectDate,\n    restrictedDates,\n    minDate,\n    maxDate,\n    onNavigateDate,\n    getDayInfosInRangeOfDay,\n    getRefsFromDayInfos,\n  } = props;\n  const cornerStyle = weekCorners?.[weekIndex + '_' + dayIndex] ?? '';\n  const isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n\n  const navigateMonthEdge = (ev: React.KeyboardEvent<HTMLElement>, date: Date): void => {\n    let targetDate: Date | undefined = undefined;\n    let direction = 1; // by default search forward\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    if (!targetDate) {\n      // if we couldn't find a target date at all, do nothing\n      return;\n    }\n\n    const findAvailableDateOptions: IAvailableDateOptions = {\n      initialDate: date,\n      targetDate,\n      direction,\n      restrictedDates,\n      minDate,\n      maxDate,\n    };\n\n    // target date is restricted, search in whatever direction until finding the next possible date,\n    // stopping at boundaries\n    let nextDate = findAvailableDate(findAvailableDateOptions);\n\n    if (!nextDate) {\n      // if no dates available in initial direction, try going backwards\n      findAvailableDateOptions.direction = -direction;\n      nextDate = findAvailableDate(findAvailableDateOptions);\n    }\n\n    // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n    // don't jump the view unnecessarily\n    const isInCurrentView =\n      weeks &&\n      nextDate &&\n      weeks.slice(1, weeks.length - 1).some((week: IDayInfo[]) => {\n        return week.some((dayToCompare: IDayInfo) => {\n          return compareDates(dayToCompare.originalDate, nextDate!);\n        });\n      });\n    if (isInCurrentView) {\n      return;\n    }\n\n    // else, fire navigation on the date to change the view to show it\n    if (nextDate) {\n      onNavigateDate(nextDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  const onMouseOverDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-hoverStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          // remove the static classes first to overwrite them\n          dayRef.classList.remove(\n            classNames.bottomLeftCornerDate!,\n            classNames.bottomRightCornerDate!,\n            classNames.topLeftCornerDate!,\n            classNames.topRightCornerDate!,\n          );\n\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.add(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onMouseDownDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseUpDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseOutDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.remove(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onDayKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectDate?.(day.originalDate);\n    } else {\n      navigateMonthEdge(ev, day.originalDate);\n    }\n  };\n\n  let ariaLabel = dateTimeFormatter.formatMonthDayYear(day.originalDate, strings);\n  if (day.isMarked) {\n    ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n  }\n\n  return (\n    <td\n      className={css(\n        classNames.dayCell,\n        weekCorners && cornerStyle,\n        day.isSelected && classNames.daySelected,\n        day.isSelected && 'ms-CalendarDay-daySelected',\n        !day.isInBounds && classNames.dayOutsideBounds,\n        !day.isInMonth && classNames.dayOutsideNavigatedMonth,\n      )}\n      ref={(element: HTMLTableCellElement) => {\n        customDayCellRef?.(element, day.originalDate, classNames);\n        day.setRef(element);\n      }}\n      aria-hidden={ariaHidden}\n      onClick={day.isInBounds && !ariaHidden ? day.onSelected : undefined}\n      onMouseOver={!ariaHidden ? onMouseOverDay : undefined}\n      onMouseDown={!ariaHidden ? onMouseDownDay : undefined}\n      onMouseUp={!ariaHidden ? onMouseUpDay : undefined}\n      onMouseOut={!ariaHidden ? onMouseOutDay : undefined}\n      role=\"presentation\" // the child <button> is the gridcell that our parent <tr> contains, so tell ARIA we are not\n    >\n      <button\n        key={day.key + 'button'}\n        aria-hidden={ariaHidden}\n        className={css(\n          classNames.dayButton,\n          day.isToday && classNames.dayIsToday,\n          day.isToday && 'ms-CalendarDay-dayIsToday',\n        )}\n        onKeyDown={!ariaHidden ? onDayKeyDown : undefined}\n        aria-label={ariaLabel}\n        id={isNavigatedDate ? activeDescendantId : undefined}\n        aria-current={day.isSelected ? 'date' : undefined}\n        aria-selected={day.isInBounds ? day.isSelected : undefined}\n        data-is-focusable={!ariaHidden && (allFocusable || (day.isInBounds ? true : undefined))}\n        ref={isNavigatedDate ? navigatedDayRef : undefined}\n        disabled={!allFocusable && !day.isInBounds}\n        aria-disabled={!ariaHidden && !day.isInBounds}\n        type=\"button\"\n        role=\"gridcell\" // create grid structure\n        aria-readonly={true} // prevent grid from being \"editable\"\n        tabIndex={isNavigatedDate ? 0 : undefined}\n      >\n        <span aria-hidden=\"true\">{dateTimeFormatter.formatDay(day.originalDate)}</span>\n        {day.isMarked && <div aria-hidden=\"true\" className={classNames.dayMarker} />}\n      </button>\n    </td>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
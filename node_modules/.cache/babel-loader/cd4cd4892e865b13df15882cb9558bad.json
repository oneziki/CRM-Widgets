{"ast":null,"code":"import * as React from 'react';\nimport { css } from '../../Utilities';\nimport { CommandButton } from '../../Button';\nimport { useId } from '@fluentui/react-hooks';\nexport var ButtonGridCell = function (props) {\n  var _a;\n\n  var defaultId = useId('gridCell');\n  var item = props.item,\n      _b = props.id,\n      id = _b === void 0 ? defaultId : _b,\n      className = props.className,\n      role = props.role,\n      selected = props.selected,\n      _c = props.disabled,\n      disabled = _c === void 0 ? false : _c,\n      onRenderItem = props.onRenderItem,\n      cellDisabledStyle = props.cellDisabledStyle,\n      cellIsSelectedStyle = props.cellIsSelectedStyle,\n      index = props.index,\n      label = props.label,\n      getClassNames = props.getClassNames,\n      onClick = props.onClick,\n      onHover = props.onHover,\n      onMouseMove = props.onMouseMove,\n      onMouseLeave = props.onMouseLeave,\n      onMouseEnter = props.onMouseEnter,\n      onFocus = props.onFocus;\n  var handleClick = React.useCallback(function () {\n    if (onClick && !disabled) {\n      onClick(item);\n    }\n  }, [disabled, item, onClick]);\n  var handleMouseEnter = React.useCallback(function (ev) {\n    var didUpdateOnEnter = onMouseEnter && onMouseEnter(ev);\n\n    if (!didUpdateOnEnter && onHover && !disabled) {\n      onHover(item);\n    }\n  }, [disabled, item, onHover, onMouseEnter]);\n  var handleMouseMove = React.useCallback(function (ev) {\n    var didUpdateOnMove = onMouseMove && onMouseMove(ev);\n\n    if (!didUpdateOnMove && onHover && !disabled) {\n      onHover(item);\n    }\n  }, [disabled, item, onHover, onMouseMove]);\n  var handleMouseLeave = React.useCallback(function (ev) {\n    var didUpdateOnLeave = onMouseLeave && onMouseLeave(ev);\n\n    if (!didUpdateOnLeave && onHover && !disabled) {\n      onHover();\n    }\n  }, [disabled, onHover, onMouseLeave]);\n  var handleFocus = React.useCallback(function () {\n    if (onFocus && !disabled) {\n      onFocus(item);\n    }\n  }, [disabled, item, onFocus]);\n  return React.createElement(CommandButton, {\n    id: id,\n    \"data-index\": index,\n    \"data-is-focusable\": true,\n    disabled: disabled,\n    className: css(className, (_a = {}, _a['' + cellIsSelectedStyle] = selected, _a['' + cellDisabledStyle] = disabled, _a)),\n    onClick: handleClick,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onFocus: handleFocus,\n    role: role,\n    \"aria-selected\": selected,\n    ariaLabel: label,\n    title: label,\n    getClassNames: getClassNames\n  }, onRenderItem(item));\n};","map":{"version":3,"sources":["utilities/ButtonGrid/ButtonGridCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css } from '../../Utilities';\nimport { IButtonGridCellProps } from './ButtonGridCell.types';\nimport { CommandButton } from '../../Button';\nimport { useId } from '@fluentui/react-hooks';\n\nexport const ButtonGridCell = <T, P extends IButtonGridCellProps<T>>(props: IButtonGridCellProps<T>) => {\n  const defaultId = useId('gridCell');\n  const {\n    item,\n    id = defaultId,\n    className,\n    role,\n    selected,\n    disabled = false,\n    onRenderItem,\n    cellDisabledStyle,\n    cellIsSelectedStyle,\n    index,\n    label,\n    getClassNames,\n    onClick,\n    onHover,\n    onMouseMove,\n    onMouseLeave,\n    onMouseEnter,\n    onFocus,\n  } = props;\n\n  const handleClick = React.useCallback((): void => {\n    if (onClick && !disabled) {\n      onClick(item);\n    }\n  }, [disabled, item, onClick]);\n\n  const handleMouseEnter = React.useCallback(\n    (ev: React.MouseEvent<HTMLButtonElement>): void => {\n      const didUpdateOnEnter = onMouseEnter && onMouseEnter(ev);\n\n      if (!didUpdateOnEnter && onHover && !disabled) {\n        onHover(item);\n      }\n    },\n    [disabled, item, onHover, onMouseEnter],\n  );\n\n  const handleMouseMove = React.useCallback(\n    (ev: React.MouseEvent<HTMLButtonElement>): void => {\n      const didUpdateOnMove = onMouseMove && onMouseMove(ev);\n\n      if (!didUpdateOnMove && onHover && !disabled) {\n        onHover(item);\n      }\n    },\n    [disabled, item, onHover, onMouseMove],\n  );\n\n  const handleMouseLeave = React.useCallback(\n    (ev: React.MouseEvent<HTMLButtonElement>): void => {\n      const didUpdateOnLeave = onMouseLeave && onMouseLeave(ev);\n\n      if (!didUpdateOnLeave && onHover && !disabled) {\n        onHover();\n      }\n    },\n    [disabled, onHover, onMouseLeave],\n  );\n\n  const handleFocus = React.useCallback((): void => {\n    if (onFocus && !disabled) {\n      onFocus(item);\n    }\n  }, [disabled, item, onFocus]);\n\n  return (\n    <CommandButton\n      id={id}\n      data-index={index}\n      data-is-focusable\n      disabled={disabled}\n      className={css(className, {\n        ['' + cellIsSelectedStyle]: selected,\n        ['' + cellDisabledStyle]: disabled,\n      })}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      role={role}\n      aria-selected={selected}\n      ariaLabel={label}\n      title={label}\n      getClassNames={getClassNames}\n    >\n      {onRenderItem(item)}\n    </CommandButton>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
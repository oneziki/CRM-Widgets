{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '../../Utilities';\nimport { notifyHostChanged } from './Layer.notification';\nexport var LayerHost = function (props) {\n  var id = props.id,\n      className = props.className;\n  React.useEffect(function () {\n    notifyHostChanged(id); // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n  useUnmount(function () {\n    notifyHostChanged(id);\n  });\n  return React.createElement(\"div\", __assign({}, props, {\n    className: css('ms-LayerHost', className)\n  }));\n};\n\nvar useUnmount = function (unmountFunction) {\n  var unmountRef = React.useRef(unmountFunction);\n  unmountRef.current = unmountFunction;\n  React.useEffect(function () {\n    return function () {\n      if (unmountRef.current) {\n        unmountRef.current();\n      }\n    };\n  }, []);\n};","map":{"version":3,"sources":["components/Layer/LayerHost.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,iBAApB;AAEA,SAAS,iBAAT,QAAkC,sBAAlC;AAEA,OAAO,IAAM,SAAS,GAA6C,UAAA,KAAA,EAAK;AAC9D,MAAA,EAAA,GAAA,KAAA,CAAA,EAAA;AAAA,MAAI,SAAA,GAAA,KAAA,CAAA,SAAJ;AAER,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,IAAA,iBAAiB,CAAC,EAAD,CAAjB,CADc,CAEd;AACD,GAHD,EAGG,EAHH;AAKA,EAAA,UAAU,CAAC,YAAA;AACT,IAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAFS,CAAV;AAIA,SAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,KAAT,EAAc;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,cAAD,EAAiB,SAAjB;AAAhB,GAAd,CAAA,CAAP;AACD,CAbM;;AAeP,IAAM,UAAU,GAAG,UAAC,eAAD,EAA4B;AAC7C,MAAM,UAAU,GAAG,KAAK,CAAC,MAAN,CAAa,eAAb,CAAnB;AACA,EAAA,UAAU,CAAC,OAAX,GAAqB,eAArB;AACA,EAAA,KAAK,CAAC,SAAN,CACE,YAAA;AAAM,WAAA,YAAA;AACJ,UAAI,UAAU,CAAC,OAAf,EAAwB;AACtB,QAAA,UAAU,CAAC,OAAX;AACD;AAHG,KAAA;AAIL,GALH,EAME,EANF;AAQD,CAXD","sourcesContent":["import * as React from 'react';\nimport { css } from '../../Utilities';\nimport { ILayerHostProps } from './LayerHost.types';\nimport { notifyHostChanged } from './Layer.notification';\n\nexport const LayerHost: React.FunctionComponent<ILayerHostProps> = props => {\n  const { id, className } = props;\n\n  React.useEffect(() => {\n    notifyHostChanged(id!);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useUnmount(() => {\n    notifyHostChanged(id!);\n  });\n\n  return <div {...props} className={css('ms-LayerHost', className)} />;\n};\n\nconst useUnmount = (unmountFunction: () => void) => {\n  const unmountRef = React.useRef(unmountFunction);\n  unmountRef.current = unmountFunction;\n  React.useEffect(\n    () => () => {\n      if (unmountRef.current) {\n        unmountRef.current();\n      }\n    },\n    [],\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
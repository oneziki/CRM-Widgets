{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PaulSeremu\\\\Downloads\\\\react_flowcomponent\\\\src\\\\flowcontent.js\";\nimport * as React from 'react';\nimport { Stack, IStackTokens } from '@fluentui/react';\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\nimport { Label } from '@fluentui/react/lib/Label';\nimport { TextField } from '@fluentui/react/lib/TextField';\nimport { IconButton } from '@fluentui/react/lib/Button';\nimport { initializeIcons } from '@fluentui/font-icons-mdl2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninitializeIcons();\n\nfunction _submitForm(e, token, id, callback) {\n  e.preventDefault();\n  console.log(e.target.length);\n  var data1 = \"\";\n  var separator = \"\";\n\n  if (e.target.length > 1) {\n    for (var i = 0; i < e.target.length - 1; i++) {\n      data1 = data1 + separator + \"\\\"\" + e.target[i].id + \"\\\": \\\"\" + e.target[i].value + \"\\\"\";\n      separator = \",\";\n    }\n\n    data1 = \"{\" + data1 + \" }\";\n  } else {\n    data1 = \"{}\";\n  }\n\n  console.log(\"data from submit:\");\n  console.log(data1);\n  callback(data1, token, id);\n}\n\nfunction FlowContent(props) {\n  console.log(props); //const { IIconProps, IContextualMenuProps, Stack, Link, IconButton, ThemeProvider, initializeIcons } = window.FluentUIReact;\n\n  const stackTokens = {\n    childrenGap: 5\n  };\n  const stackStyles = {\n    root: {}\n  };\n  const stackButtonStyles = {\n    root: {\n      width: 230\n    }\n  };\n  const nextIcon = {\n    iconName: 'DoubleChevronRight8'\n  }; //styling css-in-js\n\n  const firstStackStyles = {\n    root: {}\n  };\n  const containerStackStyles = {\n    root: {}\n  };\n  const textStyles = {\n    width: 240,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n  const stackItemStyles = { ...textStyles\n  }; //props processing\n\n  const elements = props.data.elements;\n  const token = props.token;\n  const id = props.data.ID;\n  const continueFlow = props.continueFlow;\n  let listItems = \"loading...\";\n  let tempContent = \"\"; //check    \n\n  if (elements !== undefined) {\n    var thereIsButton = elements.some(element => element.type === \"select\");\n    console.log(\"thereIsButton:\" + thereIsButton);\n    tempContent = elements.map(element => {\n      if (element.type === \"display\") {\n        return /*#__PURE__*/_jsxDEV(Label, {\n          children: element.data.text\n        }, element.data.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this);\n      }\n\n      if (element.type === \"select\") {\n        let options = element.data.list;\n        let outputKey = element.data.outputKey;\n        return /*#__PURE__*/_jsxDEV(Stack, {\n          wrap: true,\n          tokens: stackTokens,\n          styles: containerStackStyles,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            wrap: true,\n            horizontal: true,\n            tokens: stackTokens,\n            styles: firstStackStyles,\n            children: options.map((option, i) => /*#__PURE__*/_jsxDEV(PrimaryButton, {\n              style: stackItemStyles,\n              text: option.text,\n              onClick: e => continueFlow(\"{\\\"\" + outputKey + \"\\\":\\\"\" + option.value + \"\\\"}\", token, id)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 53\n            }, this))\n          }, \"buttons\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, \"buttons\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this);\n      }\n\n      if (element.type === \"input\") {\n        return /*#__PURE__*/_jsxDEV(Stack, {\n          horizontal: true,\n          tokens: stackTokens,\n          styles: stackStyles,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\",\n            name: element.data.outputKey,\n            id: element.data.outputKey\n          }, element.data.outputKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, element.data.outputKey + \"_stack\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this);\n      }\n    });\n\n    if (!thereIsButton) {\n      listItems = /*#__PURE__*/_jsxDEV(Stack, {\n        horizontal: true,\n        tokens: stackTokens,\n        styles: stackStyles,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => _submitForm(e, token, id, continueFlow),\n          children: [tempContent, /*#__PURE__*/_jsxDEV(IconButton, {\n            iconProps: nextIcon,\n            title: \"Next\",\n            ariaLabel: \"Next\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }, this);\n    } else {\n      listItems = /*#__PURE__*/_jsxDEV(Stack, {\n        wrap: true,\n        tokens: stackTokens,\n        styles: stackStyles,\n        children: tempContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 26\n      }, this);\n    }\n  } else {\n    listItems = /*#__PURE__*/_jsxDEV(Label, {\n      disabled: true,\n      children: \"Flow is bij een eindpunt gekomen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 22\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listItems\n  }, \"flowcontent\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FlowContent;\nexport default FlowContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlowContent\");","map":{"version":3,"sources":["C:/Users/PaulSeremu/Downloads/react_flowcomponent/src/flowcontent.js"],"names":["React","Stack","IStackTokens","PrimaryButton","Label","TextField","IconButton","initializeIcons","_submitForm","e","token","id","callback","preventDefault","console","log","target","length","data1","separator","i","value","FlowContent","props","stackTokens","childrenGap","stackStyles","root","stackButtonStyles","width","nextIcon","iconName","firstStackStyles","containerStackStyles","textStyles","display","alignItems","justifyContent","stackItemStyles","elements","data","ID","continueFlow","listItems","tempContent","undefined","thereIsButton","some","element","type","map","text","options","list","outputKey","option"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Stack, IStackTokens } from '@fluentui/react';\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\nimport { Label } from '@fluentui/react/lib/Label';\r\nimport { TextField } from '@fluentui/react/lib/TextField';\r\nimport { IconButton } from '@fluentui/react/lib/Button';\r\nimport { initializeIcons } from '@fluentui/font-icons-mdl2';\r\n \r\ninitializeIcons();\r\n\r\nfunction _submitForm(e, token, id, callback) {\r\n    e.preventDefault();\r\n    console.log(e.target.length);\r\n    var data1 = \"\";\r\n    var separator =\"\"; \r\n\r\n    if(e.target.length > 1 ){\r\n        for (var i = 0; i < e.target.length - 1; i++) {\r\n            data1 = data1 + separator + \"\\\"\" + e.target[i].id + \"\\\": \\\"\" + e.target[i].value + \"\\\"\";\r\n            separator =\",\";\r\n        }\r\n        data1 = \"{\" + data1 + \" }\";\r\n    }\r\n    else{\r\n        data1 = \"{}\";\r\n    }\r\n    console.log(\"data from submit:\");\r\n    console.log(data1);\r\n    callback(data1,token,id);\r\n  }\r\n  \r\nfunction FlowContent(props)  {\r\n    console.log(props);\r\n    //const { IIconProps, IContextualMenuProps, Stack, Link, IconButton, ThemeProvider, initializeIcons } = window.FluentUIReact;\r\n    const stackTokens: IStackTokens = { childrenGap: 5 };\r\n    const stackStyles: Partial<IStackStyles> = { root: { } };\r\n    const stackButtonStyles: Partial<IStackStyles> = { root: { width: 230 } };\r\n    const nextIcon: IIconProps = { iconName: 'DoubleChevronRight8' };\r\n    //styling css-in-js\r\n    const firstStackStyles: IStackStyles = {\r\n        root: {\r\n          \r\n        },\r\n      };\r\n      const containerStackStyles: IStackStyles = {\r\n        root: {\r\n\r\n        },\r\n      };\r\n      const textStyles: React.CSSProperties = {\r\n        width: 240,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n      };\r\n\r\n      const stackItemStyles: React.CSSProperties = {\r\n        ...textStyles\r\n      };\r\n      \r\n    //props processing\r\n    const elements = props.data.elements;\r\n    const token = props.token\r\n    const id = props.data.ID\r\n    const continueFlow =  props.continueFlow\r\n    let listItems = \"loading...\";\r\n    let tempContent = \"\"; \r\n    //check    \r\n    if(elements !== undefined){\r\n\r\n        var thereIsButton = elements.some(element => element.type === \"select\");\r\n        console.log(\"thereIsButton:\" + thereIsButton);\r\n\r\n        tempContent = elements.map((element) => {\r\n            if(element.type === \"display\"){\r\n                return (<Label key={element.data.text}>{element.data.text}</Label>)\r\n            }\r\n            if(element.type === \"select\"){\r\n                let options = element.data.list\r\n                let outputKey = element.data.outputKey\r\n                return (\r\n                    <Stack wrap tokens={stackTokens} styles={containerStackStyles} key=\"buttons\">\r\n                        <Stack wrap horizontal  tokens={stackTokens} styles={firstStackStyles} key=\"buttons\">\r\n                        {options.map((option, i) => <PrimaryButton key={i}  style={stackItemStyles} text={option.text} onClick={(e) => continueFlow(\"{\\\"\" + outputKey + \"\\\":\\\"\" + option.value + \"\\\"}\",token,id)}/> )}\r\n                       </Stack>\r\n                    </Stack>\r\n                    \r\n                )          \r\n            }\r\n            if(element.type === \"input\"){\r\n                return (\r\n                    <Stack horizontal tokens={stackTokens} styles={stackStyles} key={element.data.outputKey + \"_stack\"}>\r\n                        <TextField label=\"\" name={element.data.outputKey} id={element.data.outputKey} key={element.data.outputKey}/>\r\n                    </Stack>                   \r\n                )          \r\n            }\r\n        });\r\n\r\n        if(!thereIsButton){\r\n            listItems = (<Stack horizontal tokens={stackTokens} styles={stackStyles}>\r\n                            <form onSubmit={(e) =>_submitForm(e,token,id, continueFlow)}>\r\n                                {tempContent}\r\n                                <IconButton iconProps={nextIcon} title=\"Next\" ariaLabel=\"Next\" type=\"submit\"/>\r\n                            </form>\r\n                        </Stack>)\r\n\r\n        }else{\r\n            listItems = (<Stack wrap tokens={stackTokens} styles={stackStyles}>{tempContent}</Stack>)\r\n        }\r\n\r\n    }   \r\n    else{\r\n        listItems = (<Label disabled>Flow is bij een eindpunt gekomen</Label>); \r\n    } \r\n\r\n    return (\r\n        <div key=\"flowcontent\">\r\n            {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlowContent"]},"metadata":{},"sourceType":"module"}
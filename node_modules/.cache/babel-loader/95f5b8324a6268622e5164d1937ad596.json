{"ast":null,"code":"import { DateRangeType } from '../dateValues/dateValues';\nimport { isContiguous } from './isContiguous';\n/**\n * Return corrected date range type, given `dateRangeType` and list of working days.\n * For non-contiguous working days and working week range type, returns general week range type.\n * For other cases returns input date range type.\n * @param dateRangeType - input type of range\n * @param workWeekDays - list of working days in a week\n */\n\nexport var getDateRangeTypeToUse = function (dateRangeType, workWeekDays, firstDayOfWeek) {\n  if (workWeekDays && dateRangeType === DateRangeType.WorkWeek) {\n    if (!isContiguous(workWeekDays, true, firstDayOfWeek) || workWeekDays.length === 0) {\n      return DateRangeType.Week;\n    }\n  }\n\n  return dateRangeType;\n};","map":{"version":3,"sources":["dateGrid/getDateRangeTypeToUse.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,QAAyC,0BAAzC;AACA,SAAS,YAAT,QAA6B,gBAA7B;AACA;;;;;;AAMG;;AACH,OAAO,IAAM,qBAAqB,GAAG,UACnC,aADmC,EAEnC,YAFmC,EAGnC,cAHmC,EAGV;AAEzB,MAAI,YAAY,IAAI,aAAa,KAAK,aAAa,CAAC,QAApD,EAA8D;AAC5D,QAAI,CAAC,YAAY,CAAC,YAAD,EAAe,IAAf,EAAqB,cAArB,CAAb,IAAqD,YAAY,CAAC,MAAb,KAAwB,CAAjF,EAAoF;AAClF,aAAO,aAAa,CAAC,IAArB;AACD;AACF;;AAED,SAAO,aAAP;AACD,CAZM","sourcesContent":["import { DateRangeType, DayOfWeek } from '../dateValues/dateValues';\nimport { isContiguous } from './isContiguous';\n/**\n * Return corrected date range type, given `dateRangeType` and list of working days.\n * For non-contiguous working days and working week range type, returns general week range type.\n * For other cases returns input date range type.\n * @param dateRangeType - input type of range\n * @param workWeekDays - list of working days in a week\n */\nexport const getDateRangeTypeToUse = (\n  dateRangeType: DateRangeType,\n  workWeekDays: DayOfWeek[] | undefined,\n  firstDayOfWeek: DayOfWeek,\n): DateRangeType => {\n  if (workWeekDays && dateRangeType === DateRangeType.WorkWeek) {\n    if (!isContiguous(workWeekDays, true, firstDayOfWeek) || workWeekDays.length === 0) {\n      return DateRangeType.Week;\n    }\n  }\n\n  return dateRangeType;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useWarnings } from '@fluentui/react-hooks';\nimport { FocusRects } from '@fluentui/utilities';\nimport { Label } from '../Label/Label';\nimport { useSlider } from './useSlider';\nvar COMPONENT_NAME = 'SliderBase';\nexport var SliderBase = React.forwardRef(function (props, ref) {\n  var slotProps = useSlider(props, ref);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props: props,\n      mutuallyExclusive: {\n        value: 'defaultValue'\n      }\n    });\n  }\n\n  return React.createElement(\"div\", __assign({}, slotProps.root), slotProps && React.createElement(Label, __assign({}, slotProps.label)), React.createElement(\"div\", __assign({}, slotProps.container), props.ranged && (props.vertical ? slotProps.valueLabel && React.createElement(Label, __assign({}, slotProps.valueLabel)) : slotProps.lowerValueLabel && React.createElement(Label, __assign({}, slotProps.lowerValueLabel))), React.createElement(\"div\", __assign({}, slotProps.sliderBox), React.createElement(\"div\", __assign({}, slotProps.sliderLine), props.ranged && React.createElement(\"span\", __assign({}, slotProps.lowerValueThumb)), React.createElement(\"span\", __assign({}, slotProps.thumb)), slotProps.zeroTick && React.createElement(\"span\", __assign({}, slotProps.zeroTick)), React.createElement(\"span\", __assign({}, slotProps.bottomInactiveTrack)), React.createElement(\"span\", __assign({}, slotProps.activeTrack)), React.createElement(\"span\", __assign({}, slotProps.topInactiveTrack)))), props.ranged && props.vertical ? slotProps.lowerValueLabel && React.createElement(Label, __assign({}, slotProps.lowerValueLabel)) : slotProps.valueLabel && React.createElement(Label, __assign({}, slotProps.valueLabel))), React.createElement(FocusRects, null));\n});\nSliderBase.displayName = COMPONENT_NAME;","map":{"version":3,"sources":["components/Slider/Slider.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useWarnings } from '@fluentui/react-hooks';\nimport { FocusRects } from '@fluentui/utilities';\nimport { Label } from '../Label/Label';\nimport { ISliderProps } from './Slider.types';\nimport { useSlider } from './useSlider';\n\nconst COMPONENT_NAME = 'SliderBase';\n\nexport const SliderBase: React.FunctionComponent<ISliderProps> = React.forwardRef<HTMLDivElement, ISliderProps>(\n  (props, ref) => {\n    const slotProps = useSlider(props, ref);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n      useWarnings({\n        name: COMPONENT_NAME,\n        props,\n        mutuallyExclusive: { value: 'defaultValue' },\n      });\n    }\n\n    return (\n      <div {...slotProps.root}>\n        {slotProps && <Label {...slotProps.label} />}\n        <div {...slotProps.container}>\n          {props.ranged &&\n            (props.vertical\n              ? slotProps.valueLabel && <Label {...slotProps.valueLabel} />\n              : slotProps.lowerValueLabel && <Label {...slotProps.lowerValueLabel} />)}\n          <div {...slotProps.sliderBox}>\n            <div {...slotProps.sliderLine}>\n              {props.ranged && <span {...slotProps.lowerValueThumb} />}\n              <span {...slotProps.thumb} />\n              {slotProps.zeroTick && <span {...slotProps.zeroTick} />}\n              <span {...slotProps.bottomInactiveTrack} />\n              <span {...slotProps.activeTrack} />\n              <span {...slotProps.topInactiveTrack} />\n            </div>\n          </div>\n          {props.ranged && props.vertical\n            ? slotProps.lowerValueLabel && <Label {...slotProps.lowerValueLabel} />\n            : slotProps.valueLabel && <Label {...slotProps.valueLabel} />}\n        </div>\n        <FocusRects />\n      </div>\n    ) as React.ReactElement<{}>;\n  },\n);\nSliderBase.displayName = COMPONENT_NAME;\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
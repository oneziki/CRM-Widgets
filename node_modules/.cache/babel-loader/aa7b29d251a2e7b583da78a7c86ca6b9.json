{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, composeRenderFunction, getPropsWithDefaults } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\nvar DEFAULT_PROPS = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: {\n    width: 32,\n    height: 32\n  }\n};\nexport var ChoiceGroupOptionBase = function (propsWithoutDefaults) {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  var props = getPropsWithDefaults(__assign(__assign({}, DEFAULT_PROPS), {\n    key: propsWithoutDefaults.itemKey\n  }), propsWithoutDefaults);\n\n  var ariaLabel = props.ariaLabel,\n      focused = props.focused,\n      required = props.required,\n      theme = props.theme,\n      iconProps = props.iconProps,\n      imageSrc = props.imageSrc,\n      imageSize = props.imageSize,\n      disabled = props.disabled,\n      checked = props.checked,\n      id = props.id,\n      styles = props.styles,\n      name = props.name,\n      rest = __rest(props, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\"]);\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked: checked,\n    disabled: disabled,\n    imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n    imageSize: imageSize,\n    focused: focused\n  });\n\n  var _a = getNativeProps(rest, inputProperties),\n      className = _a.className,\n      nativeProps = __rest(_a, [\"className\"]);\n\n  var defaultOnRenderLabel = function () {\n    return React.createElement(\"span\", {\n      id: props.labelId,\n      className: \"ms-ChoiceFieldLabel\"\n    }, props.text);\n  };\n\n  var defaultOnRenderField = function () {\n    var _a = props.imageAlt,\n        imageAlt = _a === void 0 ? '' : _a,\n        selectedImageSrc = props.selectedImageSrc;\n    var onRenderLabel = props.onRenderLabel ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel) : defaultOnRenderLabel;\n    var label = onRenderLabel(props);\n    return React.createElement(\"label\", {\n      htmlFor: id,\n      className: classNames.field\n    }, imageSrc && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.imageWrapper\n    }, React.createElement(Image, __assign({\n      src: imageSrc,\n      alt: imageAlt\n    }, imageSize))), React.createElement(\"div\", {\n      className: classNames.selectedImageWrapper\n    }, React.createElement(Image, __assign({\n      src: selectedImageSrc,\n      alt: imageAlt\n    }, imageSize)))), iconProps && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.iconWrapper\n    }, React.createElement(Icon, __assign({}, iconProps)))), imageSrc || iconProps ? React.createElement(\"div\", {\n      className: classNames.labelWrapper\n    }, label) : label);\n  };\n\n  var _b = props.onRenderField,\n      onRenderField = _b === void 0 ? defaultOnRenderField : _b;\n\n  var onChange = function (evt) {\n    var _a, _b;\n\n    (_b = (_a = props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, evt, props);\n  };\n\n  var onBlur = function (evt) {\n    var _a, _b;\n\n    (_b = (_a = props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n  };\n\n  var onFocus = function (evt) {\n    var _a, _b;\n\n    (_b = (_a = props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, evt, props);\n  };\n\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(\"div\", {\n    className: classNames.choiceFieldWrapper\n  }, React.createElement(\"input\", __assign({\n    \"aria-label\": ariaLabel,\n    id: id,\n    className: css(classNames.input, className),\n    type: \"radio\",\n    name: name,\n    disabled: disabled,\n    checked: checked,\n    required: required\n  }, nativeProps, {\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), onRenderField(props, defaultOnRenderField)));\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';","map":{"version":3,"sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  inputProperties,\n  css,\n  composeRenderFunction,\n  getPropsWithDefaults,\n} from '../../../Utilities';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\nconst DEFAULT_PROPS: Partial<IChoiceGroupOptionProps> = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: { width: 32, height: 32 },\n};\n\nexport const ChoiceGroupOptionBase: React.FunctionComponent<IChoiceGroupOptionProps> = propsWithoutDefaults => {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  const props = getPropsWithDefaults({ ...DEFAULT_PROPS, key: propsWithoutDefaults.itemKey }, propsWithoutDefaults);\n\n  const {\n    ariaLabel,\n    focused,\n    required,\n    theme,\n    iconProps,\n    imageSrc,\n    imageSize,\n    disabled,\n    checked,\n    id,\n    styles,\n    name,\n    ...rest\n  } = props;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked,\n    disabled,\n    imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n    imageSize,\n    focused,\n  });\n\n  const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n  const defaultOnRenderLabel = (): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n\n  const defaultOnRenderField = (): JSX.Element => {\n    const { imageAlt = '', selectedImageSrc } = props;\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel)\n      : defaultOnRenderLabel;\n\n    const label = onRenderLabel(props);\n\n    return (\n      <label htmlFor={id} className={classNames.field}>\n        {imageSrc && (\n          <div className={classNames.innerField}>\n            <div className={classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n            <div className={classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={classNames.innerField}>\n            <div className={classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  const { onRenderField = defaultOnRenderField } = props;\n\n  const onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    props.onChange?.(evt, props);\n  };\n\n  const onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onBlur?.(evt);\n  };\n\n  const onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onFocus?.(evt, props);\n  };\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.choiceFieldWrapper}>\n        <input\n          aria-label={ariaLabel}\n          id={id}\n          className={css(classNames.input, className)}\n          type=\"radio\"\n          name={name}\n          disabled={disabled}\n          checked={checked}\n          required={required}\n          {...nativeProps}\n          onChange={onChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        {onRenderField(props, defaultOnRenderField)}\n      </div>\n    </div>\n  );\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
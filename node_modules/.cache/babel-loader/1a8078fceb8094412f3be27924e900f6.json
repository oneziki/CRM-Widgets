{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexport var TagItemBase = function (props) {\n  var theme = props.theme,\n      styles = props.styles,\n      selected = props.selected,\n      disabled = props.disabled,\n      enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n      children = props.children,\n      className = props.className,\n      index = props.index,\n      onRemoveItem = props.onRemoveItem,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      _a = props.title,\n      title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  var itemId = useId();\n  var disabledAttrs = enableTagFocusInDisabledPicker ? {\n    'aria-disabled': disabled,\n    tabindex: 0\n  } : {\n    disabled: disabled\n  };\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem',\n    key: index\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    title: title,\n    id: itemId + \"-text\"\n  }, children), React.createElement(IconButton, __assign({\n    id: itemId,\n    onClick: onRemoveItem\n  }, disabledAttrs, {\n    iconProps: {\n      iconName: 'Cancel',\n      styles: {\n        root: {\n          fontSize: '12px'\n        }\n      }\n    },\n    className: classNames.close,\n    ariaLabel: removeButtonAriaLabel,\n    \"aria-labelledby\": itemId + \" \" + itemId + \"-text\",\n    \"data-selection-index\": index\n  })));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"sources":["components/pickers/TagPicker/TagItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,MAAT,EAAiB,kBAAjB,QAA2C,oBAA3C;AACA,SAAS,UAAT,QAA2B,iBAA3B;AAGA,SAAS,SAAT,QAA0B,kBAA1B;AACA,SAAS,KAAT,QAAsB,uBAAtB;AAEA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA;;AAEG;;AACH,OAAO,IAAM,WAAW,GAAG,UAAC,KAAD,EAAqB;AAE5C,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MACA,MAAA,GAAA,KAAA,CAAA,MADA;AAAA,MAEA,QAAA,GAAA,KAAA,CAAA,QAFA;AAAA,MAGA,QAAA,GAAA,KAAA,CAAA,QAHA;AAAA,MAIA,8BAAA,GAAA,KAAA,CAAA,8BAJA;AAAA,MAKA,QAAA,GAAA,KAAA,CAAA,QALA;AAAA,MAMA,SAAA,GAAA,KAAA,CAAA,SANA;AAAA,MAOA,KAAA,GAAA,KAAA,CAAA,KAPA;AAAA,MAQA,YAAA,GAAA,KAAA,CAAA,YARA;AAAA,MASA,qBAAA,GAAA,KAAA,CAAA,qBATA;AAAA,MAUA,EAAA,GAAA,KAAA,CAAA,KAVA;AAAA,MAUA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,OAAA,KAAA,CAAA,QAAA,KAAA,QAAA,GAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,IAAA,CAAA,IAAA,GAAA,EAVA;AAaF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,IAAA,KAAK,EAAE,KADgC;AAEvC,IAAA,SAAS,EAAA,SAF8B;AAGvC,IAAA,QAAQ,EAAA,QAH+B;AAIvC,IAAA,QAAQ,EAAA;AAJ+B,GAAT,CAAhC;AAOA,MAAM,MAAM,GAAG,KAAK,EAApB;AAEA,MAAM,aAAa,GAAG,8BAA8B,GAChD;AACE,qBAAiB,QADnB;AAEE,IAAA,QAAQ,EAAE;AAFZ,GADgD,GAKhD;AACE,IAAA,QAAQ,EAAE;AADZ,GALJ;AASA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,UAAU,CAAC,IAA3B;AAAiC,IAAA,IAAI,EAAE,UAAvC;AAAmD,IAAA,GAAG,EAAE;AAAxD,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,UAAU,CAAC,IAA5B;AAAkC,IAAA,KAAK,EAAE,KAAzC;AAAgD,IAAA,EAAE,EAAK,MAAM,GAAA;AAA7D,GAAA,EACG,QADH,CADF,EAIE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA;AACT,IAAA,EAAE,EAAE,MADK;AAET,IAAA,OAAO,EAAE;AAFA,GAAA,EAGL,aAHK,EAGQ;AACjB,IAAA,SAAS,EAAE;AAAE,MAAA,QAAQ,EAAE,QAAZ;AAAsB,MAAA,MAAM,EAAE;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,QAAQ,EAAE;AAAZ;AAAR;AAA9B,KADM;AAEjB,IAAA,SAAS,EAAE,UAAU,CAAC,KAFL;AAGjB,IAAA,SAAS,EAAE,qBAHM;AAGe,uBACZ,MAAM,GAAA,GAAN,GAAU,MAAV,GAAgB,OAJnB;AAI0B,4BACrB;AALL,GAHR,CAAX,CAJF,CADF;AAiBD,CAlDM;AAoDP,OAAO,IAAM,OAAO,GAAG,MAAM,CAAoD,WAApD,EAAiE,SAAjE,EAA4E,SAA5E,EAAuF;AAClH,EAAA,KAAK,EAAE;AAD2G,CAAvF,CAAtB","sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\n\nimport { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  const itemId = useId();\n\n  const disabledAttrs = enableTagFocusInDisabledPicker\n    ? {\n        'aria-disabled': disabled,\n        tabindex: 0,\n      }\n    : {\n        disabled: disabled,\n      };\n\n  return (\n    <div className={classNames.root} role={'listitem'} key={index}>\n      <span className={classNames.text} title={title} id={`${itemId}-text`}>\n        {children}\n      </span>\n      <IconButton\n        id={itemId}\n        onClick={onRemoveItem}\n        {...disabledAttrs}\n        iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n        aria-labelledby={`${itemId} ${itemId}-text`}\n        data-selection-index={index}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nvar COMPONENT_NAME = 'SearchBox';\nvar iconButtonStyles = {\n  root: {\n    height: 'auto'\n  },\n  icon: {\n    fontSize: '12px'\n  }\n};\nvar iconButtonProps = {\n  iconName: 'Clear'\n};\nvar defaultClearButtonProps = {\n  ariaLabel: 'Clear text'\n};\nvar getClassNames = classNamesFunction();\n\nvar useComponentRef = function (componentRef, inputElementRef, hasFocus) {\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function () {\n        var _a;\n\n        return (_a = inputElementRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      hasFocus: function () {\n        return hasFocus;\n      }\n    };\n  }, [inputElementRef, hasFocus]);\n};\n\nexport var SearchBoxBase = React.forwardRef(function (props, forwardedRef) {\n  var _a = props.defaultValue,\n      defaultValue = _a === void 0 ? '' : _a;\n\n  var _b = React.useState(false),\n      hasFocus = _b[0],\n      setHasFocus = _b[1];\n\n  var _c = useControllableValue(props.value, defaultValue, props.onChange),\n      uncastValue = _c[0],\n      setValue = _c[1];\n\n  var value = String(uncastValue);\n  var rootElementRef = React.useRef(null);\n  var inputElementRef = React.useRef(null);\n  var mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  var id = useId(COMPONENT_NAME, props.id);\n  var ariaLabel = props.ariaLabel,\n      className = props.className,\n      disabled = props.disabled,\n      underlined = props.underlined,\n      styles = props.styles,\n      // eslint-disable-next-line deprecation/deprecation\n  labelText = props.labelText,\n      // eslint-disable-next-line deprecation/deprecation\n  _d = props.placeholder,\n      // eslint-disable-next-line deprecation/deprecation\n  placeholder = _d === void 0 ? labelText : _d,\n      theme = props.theme,\n      _e = props.clearButtonProps,\n      clearButtonProps = _e === void 0 ? defaultClearButtonProps : _e,\n      _f = props.disableAnimation,\n      disableAnimation = _f === void 0 ? false : _f,\n      customOnClear = props.onClear,\n      customOnBlur = props.onBlur,\n      customOnEscape = props.onEscape,\n      customOnSearch = props.onSearch,\n      customOnKeyDown = props.onKeyDown,\n      iconProps = props.iconProps,\n      role = props.role;\n  var customOnClearClick = clearButtonProps.onClick;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    underlined: underlined,\n    hasFocus: hasFocus,\n    disabled: disabled,\n    hasInput: value.length > 0,\n    disableAnimation: disableAnimation\n  });\n  var nativeProps = getNativeProps(props, inputProperties, ['className', 'placeholder', 'onFocus', 'onBlur', 'value', 'role']);\n  var onClear = React.useCallback(function (ev) {\n    var _a, _b;\n\n    (_a = customOnClear) === null || _a === void 0 ? void 0 : _a(ev);\n\n    if (!ev.defaultPrevented) {\n      setValue('');\n      (_b = inputElementRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  }, [customOnClear, setValue]);\n  var onClearClick = React.useCallback(function (ev) {\n    var _a;\n\n    (_a = customOnClearClick) === null || _a === void 0 ? void 0 : _a(ev);\n\n    if (!ev.defaultPrevented) {\n      onClear(ev);\n    }\n  }, [customOnClearClick, onClear]);\n\n  var onFocusCapture = function (ev) {\n    var _a, _b;\n\n    setHasFocus(true);\n    (_b = (_a = props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, ev);\n  };\n\n  var onClickFocus = function () {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  var onBlur = React.useCallback(function (ev) {\n    var _a;\n\n    setHasFocus(false);\n    (_a = customOnBlur) === null || _a === void 0 ? void 0 : _a(ev);\n  }, [customOnBlur]);\n\n  var onInputChange = function (ev) {\n    setValue(ev.target.value);\n  };\n\n  var onKeyDown = function (ev) {\n    var _a, _b; // eslint-disable-next-line deprecation/deprecation\n\n\n    switch (ev.which) {\n      case KeyCodes.escape:\n        (_a = customOnEscape) === null || _a === void 0 ? void 0 : _a(ev); // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        (_b = customOnKeyDown) === null || _b === void 0 ? void 0 : _b(ev); // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n  return React.createElement(\"div\", {\n    role: role,\n    ref: mergedRootRef,\n    className: classNames.root,\n    onFocusCapture: onFocusCapture\n  }, React.createElement(\"div\", {\n    className: classNames.iconContainer,\n    onClick: onClickFocus,\n    \"aria-hidden\": true\n  }, React.createElement(Icon, __assign({\n    iconName: \"Search\"\n  }, iconProps, {\n    className: classNames.icon\n  }))), React.createElement(\"input\", __assign({}, nativeProps, {\n    id: id,\n    className: classNames.field,\n    placeholder: placeholder,\n    onChange: onInputChange,\n    onInput: onInputChange,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    value: value,\n    disabled: disabled,\n    role: \"searchbox\",\n    \"aria-label\": ariaLabel,\n    ref: inputElementRef\n  })), value.length > 0 && React.createElement(\"div\", {\n    className: classNames.clearButton\n  }, React.createElement(IconButton, __assign({\n    onBlur: onBlur,\n    styles: iconButtonStyles,\n    iconProps: iconButtonProps\n  }, clearButtonProps, {\n    onClick: onClearClick\n  }))));\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props: props,\n      deprecations: {\n        labelText: 'placeholder'\n      }\n    });\n  }\n}","map":{"version":3,"sources":["components/SearchBox/SearchBox.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton, IButtonProps, IButtonStyles } from '../../Button';\nimport { Icon, IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const { defaultValue = '' } = props;\n  const [hasFocus, setHasFocus] = React.useState(false);\n  const [uncastValue, setValue] = useControllableValue(props.value, defaultValue, props.onChange);\n  const value = String(uncastValue);\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n  const {\n    ariaLabel,\n    className,\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n  } = props;\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
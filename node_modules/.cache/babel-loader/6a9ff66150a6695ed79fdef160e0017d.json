{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useId, useBoolean, useControllableValue } from '@fluentui/react-hooks';\nimport { KeyCodes, css, getRTL, getRTLSafeKeyCode, on, classNamesFunction, getNativeProps, divProperties } from '@fluentui/utilities';\nexport var ONKEYDOWN_TIMEOUT_DURATION = 1000;\nvar getClassNames = classNamesFunction();\n\nvar getSlotStyleFn = function (sty) {\n  return function (value) {\n    var _a;\n\n    return _a = {}, _a[sty] = value + \"%\", _a;\n  };\n};\n\nvar getPositionStyleFn = function (vertical, rtl) {\n  if (vertical === void 0) {\n    vertical = false;\n  }\n\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  if (vertical) {\n    return getSlotStyleFn('bottom');\n  }\n\n  return getSlotStyleFn(rtl ? 'right' : 'left');\n};\n\nvar getPercent = function (value, sliderMin, sliderMax) {\n  return sliderMax === sliderMin ? 0 : (value - sliderMin) / (sliderMax - sliderMin) * 100;\n};\n\nvar getLineSectionStylesFn = function (vertical) {\n  if (vertical === void 0) {\n    vertical = false;\n  }\n\n  var lengthString = vertical ? 'height' : 'width';\n  return getSlotStyleFn(lengthString);\n};\n\nvar useComponentRef = function (props, thumb, value, range) {\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      get value() {\n        return value;\n      },\n\n      get range() {\n        return props.ranged ? range : undefined;\n      },\n\n      focus: function () {\n        if (thumb.current) {\n          thumb.current.focus();\n        }\n      }\n    };\n  }, [thumb, value, props.ranged, range]);\n};\n\nexport var useSlider = function (props, ref) {\n  var _a = props.step,\n      step = _a === void 0 ? 1 : _a,\n      className = props.className,\n      _b = props.disabled,\n      disabled = _b === void 0 ? false : _b,\n      label = props.label,\n      _c = props.max,\n      max = _c === void 0 ? 10 : _c,\n      _d = props.min,\n      min = _d === void 0 ? 0 : _d,\n      _e = props.showValue,\n      showValue = _e === void 0 ? true : _e,\n      _f = props.buttonProps,\n      buttonProps = _f === void 0 ? {} : _f,\n      _g = props.vertical,\n      vertical = _g === void 0 ? false : _g,\n      valueFormat = props.valueFormat,\n      styles = props.styles,\n      theme = props.theme,\n      originFromZero = props.originFromZero,\n      ariaLabel = props[\"aria-label\"],\n      ranged = props.ranged;\n  var disposables = React.useRef([]);\n  var sliderLine = React.useRef(null);\n\n  var _h = useControllableValue(props.value, props.defaultValue, function (ev, v) {\n    var _a;\n\n    return (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, v, ranged ? [lowerValue, v] : undefined);\n  }),\n      unclampedValue = _h[0],\n      setValue = _h[1];\n\n  var _j = useControllableValue(props.lowerValue, props.defaultLowerValue, function (ev, lv) {\n    var _a;\n\n    return (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, value, [lv, value]);\n  }),\n      unclampedLowerValue = _j[0],\n      setLowerValue = _j[1];\n\n  var isAdjustingLowerValueRef = React.useRef(false); // Ensure that value is always a number and is clamped by min/max.\n\n  var value = Math.max(min, Math.min(max, unclampedValue || 0));\n  var lowerValue = Math.max(min, Math.min(value, unclampedLowerValue || 0));\n  var id = useId('Slider');\n\n  var _k = useBoolean(true),\n      useShowTransitions = _k[0],\n      toggleUseShowTransitions = _k[1].toggle;\n\n  var classNames = getClassNames(styles, {\n    className: className,\n    disabled: disabled,\n    vertical: vertical,\n    showTransitions: useShowTransitions,\n    showValue: showValue,\n    ranged: ranged,\n    theme: theme\n  });\n\n  var _l = React.useState(0),\n      timerId = _l[0],\n      setTimerId = _l[1];\n\n  var steps = (max - min) / step;\n\n  var clearOnKeyDownTimer = function () {\n    clearTimeout(timerId);\n  };\n\n  var setOnKeyDownTimer = function (event) {\n    clearOnKeyDownTimer();\n    setTimerId(setTimeout(function () {\n      if (props.onChanged) {\n        props.onChanged(event, value);\n      }\n    }, ONKEYDOWN_TIMEOUT_DURATION));\n  };\n\n  var getAriaValueText = function (valueProps) {\n    var ariaValueText = props.ariaValueText;\n\n    if (valueProps !== undefined) {\n      return ariaValueText ? ariaValueText(valueProps) : valueProps.toString();\n    }\n\n    return undefined;\n  };\n\n  var updateValue = function (valueProp, renderedValueProp) {\n    var snapToStep = props.snapToStep;\n    var numDec = 0;\n\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    } // Make sure value has correct number of decimal places based on number of decimals in step\n\n\n    var roundedValue = parseFloat(valueProp.toFixed(numDec));\n\n    if (snapToStep) {\n      renderedValueProp = roundedValue;\n    }\n\n    if (ranged) {\n      // decided which thumb value to change\n      if (isAdjustingLowerValueRef.current && (originFromZero ? roundedValue <= 0 : roundedValue <= value)) {\n        setLowerValue(roundedValue);\n      } else if (!isAdjustingLowerValueRef.current && (originFromZero ? roundedValue >= 0 : roundedValue >= lowerValue)) {\n        setValue(roundedValue);\n      }\n    } else {\n      setValue(roundedValue);\n    }\n  };\n\n  var onKeyDown = function (event) {\n    var newCurrentValue = isAdjustingLowerValueRef.current ? lowerValue : value;\n    var diff = 0; // eslint-disable-next-line deprecation/deprecation\n\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, props.theme):\n      case KeyCodes.down:\n        diff = -step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      case getRTLSafeKeyCode(KeyCodes.right, props.theme):\n      case KeyCodes.up:\n        diff = step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      case KeyCodes.home:\n        newCurrentValue = min;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      case KeyCodes.end:\n        newCurrentValue = max;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n\n      default:\n        return;\n    }\n\n    var newValue = Math.min(max, Math.max(min, newCurrentValue + diff));\n    updateValue(newValue, newValue);\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  var getPosition = function (event, verticalProp) {\n    var currentPosition;\n\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !verticalProp ? event.clientX : event.clientY;\n        break;\n\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !verticalProp ? event.touches[0].clientX : event.touches[0].clientY;\n        break;\n    }\n\n    return currentPosition;\n  };\n\n  var calculateCurrentSteps = function (event) {\n    if (!sliderLine.current) {\n      return;\n    }\n\n    var sliderPositionRect = sliderLine.current.getBoundingClientRect();\n    var sliderLength = !props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    var stepLength = sliderLength / steps;\n    var currentSteps;\n    var distance;\n\n    if (!props.vertical) {\n      var left = getPosition(event, props.vertical);\n      distance = getRTL(props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      var bottom = getPosition(event, props.vertical);\n      distance = sliderPositionRect.bottom - bottom;\n      currentSteps = distance / stepLength;\n    }\n\n    return currentSteps;\n  };\n\n  var onMouseMoveOrTouchMove = function (event, suppressEventCancelation) {\n    var currentSteps = calculateCurrentSteps(event);\n    var newCurrentValue;\n    var newRenderedValue; // The value shouldn't be bigger than max or be smaller than min.\n\n    if (currentSteps > Math.floor(steps)) {\n      newRenderedValue = newCurrentValue = max;\n    } else if (currentSteps < 0) {\n      newRenderedValue = newCurrentValue = min;\n    } else {\n      newRenderedValue = min + step * currentSteps;\n      newCurrentValue = min + step * Math.round(currentSteps);\n    }\n\n    updateValue(newCurrentValue, newRenderedValue);\n\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  var onMouseDownOrTouchStart = function (event) {\n    if (ranged) {\n      var currentSteps = calculateCurrentSteps(event);\n      var newRenderedValue = min + step * currentSteps;\n\n      if (newRenderedValue <= lowerValue || newRenderedValue - lowerValue <= value - newRenderedValue) {\n        isAdjustingLowerValueRef.current = true;\n      } else {\n        isAdjustingLowerValueRef.current = false;\n      }\n    }\n\n    if (event.type === 'mousedown') {\n      disposables.current.push(on(window, 'mousemove', onMouseMoveOrTouchMove, true), on(window, 'mouseup', onMouseUpOrTouchEnd, true));\n    } else if (event.type === 'touchstart') {\n      disposables.current.push(on(window, 'touchmove', onMouseMoveOrTouchMove, true), on(window, 'touchend', onMouseUpOrTouchEnd, true));\n    }\n\n    toggleUseShowTransitions();\n    onMouseMoveOrTouchMove(event, true);\n  };\n\n  var onMouseUpOrTouchEnd = function (event) {\n    if (props.onChanged) {\n      props.onChanged(event, value);\n    }\n\n    toggleUseShowTransitions();\n    disposeListeners();\n  };\n\n  var onThumbFocus = function (event) {\n    isAdjustingLowerValueRef.current = event.target === lowerValueThumbRef.current;\n  };\n\n  var disposeListeners = function () {\n    disposables.current.forEach(function (dispose) {\n      return dispose();\n    });\n    disposables.current = [];\n  };\n\n  var onMouseDownProp = disabled ? {} : {\n    onMouseDown: onMouseDownOrTouchStart\n  };\n  var onTouchStartProp = disabled ? {} : {\n    onTouchStart: onMouseDownOrTouchStart\n  };\n  var onKeyDownProp = disabled ? {} : {\n    onKeyDown: onKeyDown\n  };\n  var onFocusProp = disabled ? {} : {\n    onFocus: onThumbFocus\n  };\n  var lowerValueThumbRef = React.useRef(null);\n  var thumbRef = React.useRef(null);\n  useComponentRef(props, ranged && !vertical ? lowerValueThumbRef : thumbRef, value, [lowerValue, value]);\n  var getPositionStyles = getPositionStyleFn(vertical, getRTL(props.theme));\n  var getTrackStyles = getLineSectionStylesFn(vertical);\n  var originValue = originFromZero ? 0 : min;\n  var valuePercent = getPercent(value, min, max);\n  var lowerValuePercent = getPercent(lowerValue, min, max);\n  var originPercentOfLine = getPercent(originValue, min, max);\n  var activeSectionWidth = ranged ? valuePercent - lowerValuePercent : Math.abs(originPercentOfLine - valuePercent);\n  var topSectionWidth = Math.min(100 - valuePercent, 100 - originPercentOfLine);\n  var bottomSectionWidth = ranged ? lowerValuePercent : Math.min(valuePercent, originPercentOfLine);\n  var rootProps = {\n    className: classNames.root,\n    ref: ref\n  };\n  var divButtonProps = buttonProps ? getNativeProps(buttonProps, divProperties) : undefined;\n  var labelProps = {\n    className: classNames.titleLabel,\n    children: label,\n    disabled: disabled,\n    htmlFor: ariaLabel ? undefined : id\n  };\n  var valueLabelProps = showValue ? {\n    className: classNames.valueLabel,\n    children: valueFormat ? valueFormat(value) : value,\n    disabled: disabled\n  } : undefined;\n  var lowerValueLabelProps = ranged && showValue ? {\n    className: classNames.valueLabel,\n    children: valueFormat ? valueFormat(lowerValue) : lowerValue,\n    disabled: disabled\n  } : undefined;\n  var zeroTickProps = originFromZero ? {\n    className: classNames.zeroTick,\n    style: getPositionStyles(originPercentOfLine)\n  } : undefined;\n  var trackActiveProps = {\n    className: css(classNames.lineContainer, classNames.activeSection),\n    style: getTrackStyles(activeSectionWidth)\n  };\n  var trackTopInactiveProps = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(topSectionWidth)\n  };\n  var trackBottomInactiveProps = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(bottomSectionWidth)\n  };\n\n  var sliderProps = __assign({\n    'aria-disabled': disabled,\n    role: 'slider',\n    tabIndex: disabled ? undefined : 0\n  }, {\n    'data-is-focusable': !disabled\n  });\n\n  var sliderBoxProps = __assign(__assign(__assign(__assign(__assign({\n    id: id,\n    className: css(classNames.slideBox, buttonProps.className)\n  }, onMouseDownProp), onTouchStartProp), onKeyDownProp), divButtonProps), !ranged && __assign(__assign({}, sliderProps), {\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuenow': value,\n    'aria-valuetext': getAriaValueText(value),\n    'aria-label': ariaLabel || label\n  }));\n\n  var thumbProps = __assign({\n    ref: thumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(valuePercent)\n  }, ranged && __assign(__assign(__assign({}, sliderProps), onFocusProp), {\n    id: \"max-\" + id,\n    'aria-valuemin': lowerValue,\n    'aria-valuemax': max,\n    'aria-valuenow': value,\n    'aria-valuetext': getAriaValueText(value),\n    'aria-label': \"max \" + (ariaLabel || label)\n  }));\n\n  var lowerValueThumbProps = ranged ? __assign(__assign(__assign({\n    ref: lowerValueThumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(lowerValuePercent)\n  }, sliderProps), onFocusProp), {\n    id: \"min-\" + id,\n    'aria-valuemin': min,\n    'aria-valuemax': value,\n    'aria-valuenow': lowerValue,\n    'aria-valuetext': getAriaValueText(lowerValue),\n    'aria-label': \"min \" + (ariaLabel || label)\n  }) : undefined;\n  var containerProps = {\n    className: classNames.container\n  };\n  var sliderLineProps = {\n    ref: sliderLine,\n    className: classNames.line\n  };\n  return {\n    root: rootProps,\n    label: labelProps,\n    sliderBox: sliderBoxProps,\n    container: containerProps,\n    valueLabel: valueLabelProps,\n    lowerValueLabel: lowerValueLabelProps,\n    thumb: thumbProps,\n    lowerValueThumb: lowerValueThumbProps,\n    zeroTick: zeroTickProps,\n    activeTrack: trackActiveProps,\n    topInactiveTrack: trackTopInactiveProps,\n    bottomInactiveTrack: trackBottomInactiveProps,\n    sliderLine: sliderLineProps\n  };\n};","map":{"version":3,"sources":["components/Slider/useSlider.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ISliderProps, ISliderStyleProps, ISliderStyles } from './Slider.types';\nimport { useId, useBoolean, useControllableValue } from '@fluentui/react-hooks';\nimport {\n  KeyCodes,\n  css,\n  getRTL,\n  getRTLSafeKeyCode,\n  on,\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n} from '@fluentui/utilities';\nimport { ILabelProps } from '../Label/index';\n\nexport const ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\nconst getClassNames = classNamesFunction<ISliderStyleProps, ISliderStyles>();\n\ntype Dimension = 'height' | 'width';\ntype Position = 'bottom' | 'left' | 'right';\ntype PositionOrDimension = Dimension | Position;\n\nconst getSlotStyleFn = (sty: PositionOrDimension) => {\n  return (value: number) => {\n    return {\n      [sty]: `${value}%`,\n    };\n  };\n};\nconst getPositionStyleFn = (vertical: boolean = false, rtl: boolean = false) => {\n  if (vertical) {\n    return getSlotStyleFn('bottom');\n  }\n  return getSlotStyleFn(rtl ? 'right' : 'left');\n};\n\nconst getPercent = (value: number, sliderMin: number, sliderMax: number) => {\n  return sliderMax === sliderMin ? 0 : ((value! - sliderMin!) / (sliderMax! - sliderMin!)) * 100;\n};\n\nconst getLineSectionStylesFn = (vertical: boolean = false) => {\n  const lengthString = vertical ? 'height' : 'width';\n  return getSlotStyleFn(lengthString);\n};\n\nconst useComponentRef = (\n  props: ISliderProps,\n  thumb: React.RefObject<HTMLSpanElement>,\n  value: number | undefined,\n  range?: [number, number],\n) => {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      get value() {\n        return value;\n      },\n      get range() {\n        return props.ranged ? range : undefined;\n      },\n      focus() {\n        if (thumb.current) {\n          thumb.current.focus();\n        }\n      },\n    }),\n    [thumb, value, props.ranged, range],\n  );\n};\n\nexport const useSlider = (props: ISliderProps, ref: React.Ref<HTMLDivElement>) => {\n  const {\n    step = 1,\n    className,\n    disabled = false,\n    label,\n    max = 10,\n    min = 0,\n    showValue = true,\n    buttonProps = {},\n    vertical = false,\n    valueFormat,\n    styles,\n    theme,\n    originFromZero,\n    'aria-label': ariaLabel,\n    ranged,\n  } = props;\n\n  const disposables = React.useRef<(() => void)[]>([]);\n  const sliderLine = React.useRef<HTMLDivElement>(null);\n\n  const [unclampedValue, setValue] = useControllableValue(\n    props.value,\n    props.defaultValue,\n    (ev: React.FormEvent<HTMLElement> | undefined, v: ISliderProps['value']) =>\n      props.onChange?.(v!, ranged ? [lowerValue, v!] : undefined),\n  );\n  const [unclampedLowerValue, setLowerValue] = useControllableValue(\n    props.lowerValue,\n    props.defaultLowerValue,\n    (ev: React.FormEvent<HTMLElement> | undefined, lv: ISliderProps['lowerValue']) =>\n      props.onChange?.(value, [lv!, value]),\n  );\n\n  const isAdjustingLowerValueRef = React.useRef<boolean>(false);\n\n  // Ensure that value is always a number and is clamped by min/max.\n  const value = Math.max(min, Math.min(max, unclampedValue || 0));\n  const lowerValue = Math.max(min, Math.min(value, unclampedLowerValue || 0));\n\n  const id = useId('Slider');\n  const [useShowTransitions, { toggle: toggleUseShowTransitions }] = useBoolean(true);\n  const classNames = getClassNames(styles, {\n    className,\n    disabled,\n    vertical,\n    showTransitions: useShowTransitions,\n    showValue,\n    ranged,\n    theme: theme!,\n  });\n\n  const [timerId, setTimerId] = React.useState(0);\n  const steps: number = (max! - min!) / step!;\n\n  const clearOnKeyDownTimer = (): void => {\n    clearTimeout(timerId);\n  };\n\n  const setOnKeyDownTimer = (event: KeyboardEvent) => {\n    clearOnKeyDownTimer();\n    setTimerId(\n      setTimeout(() => {\n        if (props.onChanged) {\n          props.onChanged(event, value as number);\n        }\n      }, ONKEYDOWN_TIMEOUT_DURATION) as any,\n    );\n  };\n\n  const getAriaValueText = (valueProps: number | undefined): string | undefined => {\n    const { ariaValueText } = props;\n    if (valueProps !== undefined) {\n      return ariaValueText ? ariaValueText(valueProps) : valueProps.toString();\n    }\n    return undefined;\n  };\n\n  const updateValue = (valueProp: number, renderedValueProp: number): void => {\n    const { snapToStep } = props;\n    let numDec = 0;\n    if (isFinite(step!)) {\n      while (Math.round(step! * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step!) {\n        numDec++;\n      }\n    }\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    const roundedValue = parseFloat(valueProp.toFixed(numDec));\n\n    if (snapToStep) {\n      renderedValueProp = roundedValue;\n    }\n\n    if (ranged) {\n      // decided which thumb value to change\n      if (isAdjustingLowerValueRef.current && (originFromZero ? roundedValue <= 0 : roundedValue <= value)) {\n        setLowerValue(roundedValue);\n      } else if (\n        !isAdjustingLowerValueRef.current &&\n        (originFromZero ? roundedValue >= 0 : roundedValue >= lowerValue)\n      ) {\n        setValue(roundedValue);\n      }\n    } else {\n      setValue(roundedValue);\n    }\n  };\n\n  const onKeyDown = (event: KeyboardEvent): void => {\n    let newCurrentValue: number | undefined = isAdjustingLowerValueRef.current ? lowerValue : value;\n    let diff: number | undefined = 0;\n    // eslint-disable-next-line deprecation/deprecation\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, props.theme):\n      case KeyCodes.down:\n        diff = -(step as number);\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right, props.theme):\n      case KeyCodes.up:\n        diff = step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.home:\n        newCurrentValue = min;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.end:\n        newCurrentValue = max;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      default:\n        return;\n    }\n    const newValue: number = Math.min(max as number, Math.max(min as number, newCurrentValue! + diff!));\n    updateValue(newValue, newValue);\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const getPosition = (event: MouseEvent | TouchEvent, verticalProp: boolean | undefined): number | undefined => {\n    let currentPosition: number | undefined;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !verticalProp ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !verticalProp\n          ? (event as TouchEvent).touches[0].clientX\n          : (event as TouchEvent).touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  };\n\n  const calculateCurrentSteps = (event: MouseEvent | TouchEvent) => {\n    if (!sliderLine.current) {\n      return;\n    }\n    const sliderPositionRect: ClientRect = sliderLine.current.getBoundingClientRect();\n    const sliderLength: number = !props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    const stepLength: number = sliderLength / steps;\n    let currentSteps: number | undefined;\n    let distance: number | undefined;\n    if (!props.vertical) {\n      const left: number | undefined = getPosition(event, props.vertical);\n      distance = getRTL(props.theme) ? sliderPositionRect.right - left! : left! - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      const bottom: number | undefined = getPosition(event, props.vertical);\n      distance = sliderPositionRect.bottom - bottom!;\n      currentSteps = distance / stepLength;\n    }\n    return currentSteps;\n  };\n\n  const onMouseMoveOrTouchMove = (event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void => {\n    const currentSteps = calculateCurrentSteps(event);\n    let newCurrentValue: number | undefined;\n    let newRenderedValue: number | undefined;\n    // The value shouldn't be bigger than max or be smaller than min.\n    if (currentSteps! > Math.floor(steps)) {\n      newRenderedValue = newCurrentValue = max as number;\n    } else if (currentSteps! < 0) {\n      newRenderedValue = newCurrentValue = min as number;\n    } else {\n      newRenderedValue = min! + step! * currentSteps!;\n      newCurrentValue = min! + step! * Math.round(currentSteps!);\n    }\n    updateValue(newCurrentValue, newRenderedValue);\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  const onMouseDownOrTouchStart = (event: MouseEvent | TouchEvent): void => {\n    if (ranged) {\n      const currentSteps = calculateCurrentSteps(event);\n      const newRenderedValue = min! + step! * currentSteps!;\n\n      if (newRenderedValue <= lowerValue || newRenderedValue - lowerValue <= value - newRenderedValue) {\n        isAdjustingLowerValueRef.current = true;\n      } else {\n        isAdjustingLowerValueRef.current = false;\n      }\n    }\n\n    if (event.type === 'mousedown') {\n      disposables.current.push(\n        on(window, 'mousemove', onMouseMoveOrTouchMove as (ev: Event) => void, true),\n        on(window, 'mouseup', onMouseUpOrTouchEnd as (ev: Event) => void, true),\n      );\n    } else if (event.type === 'touchstart') {\n      disposables.current.push(\n        on(window, 'touchmove', onMouseMoveOrTouchMove as (ev: Event) => void, true),\n        on(window, 'touchend', onMouseUpOrTouchEnd as (ev: Event) => void, true),\n      );\n    }\n    toggleUseShowTransitions();\n    onMouseMoveOrTouchMove(event, true);\n  };\n\n  const onMouseUpOrTouchEnd = (event: MouseEvent | TouchEvent): void => {\n    if (props.onChanged) {\n      props.onChanged(event, value as number);\n    }\n    toggleUseShowTransitions();\n    disposeListeners();\n  };\n\n  const onThumbFocus = (event: MouseEvent | TouchEvent): void => {\n    isAdjustingLowerValueRef.current = event.target === lowerValueThumbRef.current;\n  };\n\n  const disposeListeners = (): void => {\n    disposables.current.forEach(dispose => dispose());\n    disposables.current = [];\n  };\n\n  const onMouseDownProp: {} = disabled ? {} : { onMouseDown: onMouseDownOrTouchStart };\n  const onTouchStartProp: {} = disabled ? {} : { onTouchStart: onMouseDownOrTouchStart };\n  const onKeyDownProp: {} = disabled ? {} : { onKeyDown: onKeyDown };\n  const onFocusProp: {} = disabled ? {} : { onFocus: onThumbFocus };\n\n  const lowerValueThumbRef = React.useRef<HTMLSpanElement>(null);\n  const thumbRef = React.useRef<HTMLSpanElement>(null);\n  useComponentRef(props, ranged && !vertical ? lowerValueThumbRef : thumbRef, value, [lowerValue, value]);\n  const getPositionStyles = getPositionStyleFn(vertical, getRTL(props.theme));\n  const getTrackStyles = getLineSectionStylesFn(vertical);\n  const originValue = originFromZero ? 0 : min;\n  const valuePercent = getPercent(value, min, max);\n  const lowerValuePercent = getPercent(lowerValue, min, max);\n  const originPercentOfLine = getPercent(originValue, min, max);\n  const activeSectionWidth = ranged ? valuePercent - lowerValuePercent : Math.abs(originPercentOfLine - valuePercent);\n  const topSectionWidth = Math.min(100 - valuePercent, 100 - originPercentOfLine);\n  const bottomSectionWidth = ranged ? lowerValuePercent : Math.min(valuePercent, originPercentOfLine);\n\n  const rootProps: React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement> = {\n    className: classNames.root,\n    ref: ref,\n  };\n\n  const divButtonProps = buttonProps\n    ? getNativeProps<React.HTMLAttributes<HTMLDivElement>>(buttonProps, divProperties)\n    : undefined;\n\n  const labelProps: ILabelProps = {\n    className: classNames.titleLabel,\n    children: label,\n    disabled,\n    htmlFor: ariaLabel ? undefined : id,\n  };\n\n  const valueLabelProps: ILabelProps | undefined = showValue\n    ? {\n        className: classNames.valueLabel,\n        children: valueFormat ? valueFormat(value!) : value,\n        disabled,\n      }\n    : undefined;\n\n  const lowerValueLabelProps: ILabelProps | undefined =\n    ranged && showValue\n      ? {\n          className: classNames.valueLabel,\n          children: valueFormat ? valueFormat(lowerValue!) : lowerValue,\n          disabled,\n        }\n      : undefined;\n\n  const zeroTickProps: React.HTMLAttributes<HTMLElement> | undefined = originFromZero\n    ? {\n        className: classNames.zeroTick,\n        style: getPositionStyles(originPercentOfLine),\n      }\n    : undefined;\n\n  const trackActiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.activeSection),\n    style: getTrackStyles(activeSectionWidth),\n  };\n\n  const trackTopInactiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(topSectionWidth),\n  };\n\n  const trackBottomInactiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(bottomSectionWidth),\n  };\n\n  const sliderProps: React.HTMLAttributes<HTMLElement> = {\n    'aria-disabled': disabled,\n    role: 'slider',\n    tabIndex: disabled ? undefined : 0,\n    ...({ 'data-is-focusable': !disabled } as any),\n  };\n\n  const sliderBoxProps: React.HTMLAttributes<HTMLElement> = {\n    id,\n    className: css(classNames.slideBox, buttonProps!.className),\n    ...onMouseDownProp,\n    ...onTouchStartProp,\n    ...onKeyDownProp,\n    ...divButtonProps,\n    ...(!ranged && {\n      ...sliderProps,\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': getAriaValueText(value),\n      'aria-label': ariaLabel || label,\n    }),\n  };\n\n  const thumbProps: React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement> = {\n    ref: thumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(valuePercent),\n    ...(ranged && {\n      ...sliderProps,\n      ...onFocusProp,\n      id: `max-${id}`,\n      'aria-valuemin': lowerValue,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': getAriaValueText(value),\n      'aria-label': `max ${ariaLabel || label}`,\n    }),\n  };\n\n  const lowerValueThumbProps:\n    | (React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement>)\n    | undefined = ranged\n    ? {\n        ref: lowerValueThumbRef,\n        className: classNames.thumb,\n        style: getPositionStyles(lowerValuePercent),\n        ...sliderProps,\n        ...onFocusProp,\n        id: `min-${id}`,\n        'aria-valuemin': min,\n        'aria-valuemax': value,\n        'aria-valuenow': lowerValue,\n        'aria-valuetext': getAriaValueText(lowerValue),\n        'aria-label': `min ${ariaLabel || label}`,\n      }\n    : undefined;\n\n  const containerProps: React.HTMLAttributes<HTMLElement> = {\n    className: classNames.container,\n  };\n\n  const sliderLineProps: React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement> = {\n    ref: sliderLine,\n    className: classNames.line,\n  };\n\n  return {\n    root: rootProps,\n    label: labelProps,\n    sliderBox: sliderBoxProps,\n    container: containerProps,\n    valueLabel: valueLabelProps,\n    lowerValueLabel: lowerValueLabelProps,\n    thumb: thumbProps,\n    lowerValueThumb: lowerValueThumbProps,\n    zeroTick: zeroTickProps,\n    activeTrack: trackActiveProps,\n    topInactiveTrack: trackTopInactiveProps,\n    bottomInactiveTrack: trackBottomInactiveProps,\n    sliderLine: sliderLineProps,\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
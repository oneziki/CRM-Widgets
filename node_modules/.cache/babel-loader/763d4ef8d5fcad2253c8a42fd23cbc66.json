{"ast":null,"code":"import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nvar coinSizeFontScaleFactor = 6;\nvar coinSizePresenceScaleFactor = 3;\nvar presenceMaxSize = 40;\nvar presenceFontMaxSize = 20;\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\nexport var PersonaPresenceBase = React.forwardRef(function (props, forwardedRef) {\n  var coinSize = props.coinSize,\n      isOutOfOffice = props.isOutOfOffice,\n      styles = props.styles,\n      // Use getStyles from props.\n  presence = props.presence,\n      theme = props.theme,\n      presenceTitle = props.presenceTitle,\n      presenceColors = props.presenceColors;\n  var rootRef = React.useRef(null);\n  var mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n  var size = sizeBoolean(props.size); // Render Presence Icon if Persona is above size 32.\n\n  var renderIcon = !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) && (coinSize ? coinSize > 32 : true);\n  var presenceHeightWidth = coinSize ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize ? coinSize / coinSizePresenceScaleFactor + 'px' : presenceMaxSize + 'px' : '';\n  var presenceFontSize = coinSize ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize ? coinSize / coinSizeFontScaleFactor + 'px' : presenceFontMaxSize + 'px' : '';\n  var coinSizeWithPresenceIconStyle = coinSize ? {\n    fontSize: presenceFontSize,\n    lineHeight: presenceHeightWidth\n  } : undefined;\n  var coinSizeWithPresenceStyle = coinSize ? {\n    width: presenceHeightWidth,\n    height: presenceHeightWidth\n  } : undefined; // Use getStyles from props, or fall back to getStyles from styles file.\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    presence: presence,\n    size: props.size,\n    isOutOfOffice: isOutOfOffice,\n    presenceColors: presenceColors\n  });\n\n  if (presence === PersonaPresenceEnum.none) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    role: \"presentation\",\n    className: classNames.presence,\n    style: coinSizeWithPresenceStyle,\n    title: presenceTitle,\n    ref: mergedRootRef\n  }, renderIcon && React.createElement(Icon, {\n    className: classNames.presenceIcon,\n    iconName: determineIcon(props.presence, props.isOutOfOffice),\n    style: coinSizeWithPresenceIconStyle\n  }));\n});\nPersonaPresenceBase.displayName = 'PersonaPresenceBase';\n\nfunction determineIcon(presence, isOutOfOffice) {\n  if (!presence) {\n    return undefined;\n  }\n\n  var oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n\n    case 'dnd':\n      return 'SkypeMinus';\n\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}","map":{"version":3,"sources":["components/Persona/PersonaPresence/PersonaPresence.base.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,kBAAT,QAAmC,oBAAnC;AACA,SAAS,IAAT,QAAqB,eAArB;AACA,SAIE,eAAe,IAAI,mBAJrB,QAMO,kBANP;AAOA,SAAS,WAAT,QAA4B,kBAA5B;AACA,SAAS,aAAT,QAA8B,uBAA9B;AAEA,IAAM,uBAAuB,GAAG,CAAhC;AACA,IAAM,2BAA2B,GAAG,CAApC;AACA,IAAM,eAAe,GAAG,EAAxB;AACA,IAAM,mBAAmB,GAAG,EAA5B;AAEA,IAAM,aAAa,GAAG,kBAAkB,CAAqD;AAC3F;AACA;AACA,EAAA,SAAS,EAAE;AAHgF,CAArD,CAAxC;AAMA;;;AAGG;;AACH,OAAO,IAAM,mBAAmB,GAAmD,KAAK,CAAC,UAAN,CAGjF,UAAC,KAAD,EAAQ,YAAR,EAAoB;AAElB,MAAA,QAAQ,GAON,KAAK,CAPC,QAAR;AAAA,MACA,aAAa,GAMX,KAAK,CANM,aADb;AAAA,MAEA,MAAM,GAKJ,KAAK,CALD,MAFN;AAAA,MAEQ;AACR,EAAA,QAAQ,GAIN,KAAK,CAJC,QAHR;AAAA,MAIA,KAAK,GAGH,KAAK,CAHF,KAJL;AAAA,MAKA,aAAa,GAEX,KAAK,CAFM,aALb;AAAA,MAMA,cAAc,GACZ,KAAK,CADO,cANd;AASF,MAAM,OAAO,GAAG,KAAK,CAAC,MAAN,CAA6B,IAA7B,CAAhB;AACA,MAAM,aAAa,GAAG,aAAa,CAAC,YAAD,EAAe,OAAf,CAAnC;AAEA,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,IAAP,CAAxB,CAdoB,CAgBpB;;AACA,MAAM,UAAU,GACd,EAAE,IAAI,CAAC,OAAL,IAAgB,IAAI,CAAC,QAArB,IAAiC,IAAI,CAAC,QAAtC,IAAkD,IAAI,CAAC,QAAvD,IAAmE,IAAI,CAAC,QAAxE,IAAoF,IAAI,CAAC,QAA3F,MACC,QAAQ,GAAG,QAAQ,GAAG,EAAd,GAAmB,IAD5B,CADF;AAIA,MAAM,mBAAmB,GAAW,QAAQ,GACxC,QAAQ,GAAG,2BAAX,GAAyC,eAAzC,GACE,QAAQ,GAAG,2BAAX,GAAyC,IAD3C,GAEE,eAAe,GAAG,IAHoB,GAIxC,EAJJ;AAKA,MAAM,gBAAgB,GAAW,QAAQ,GACrC,QAAQ,GAAG,uBAAX,GAAqC,mBAArC,GACE,QAAQ,GAAG,uBAAX,GAAqC,IADvC,GAEE,mBAAmB,GAAG,IAHa,GAIrC,EAJJ;AAKA,MAAM,6BAA6B,GAAG,QAAQ,GAC1C;AAAE,IAAA,QAAQ,EAAE,gBAAZ;AAA8B,IAAA,UAAU,EAAE;AAA1C,GAD0C,GAE1C,SAFJ;AAGA,MAAM,yBAAyB,GAAG,QAAQ,GAAG;AAAE,IAAA,KAAK,EAAE,mBAAT;AAA8B,IAAA,MAAM,EAAE;AAAtC,GAAH,GAAiE,SAA3G,CAlCoB,CAoCpB;;AACA,MAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,IAAA,KAAK,EAAE,KADgC;AAEvC,IAAA,QAAQ,EAAA,QAF+B;AAGvC,IAAA,IAAI,EAAE,KAAK,CAAC,IAH2B;AAIvC,IAAA,aAAa,EAAA,aAJ0B;AAKvC,IAAA,cAAc,EAAA;AALyB,GAAT,CAAhC;;AAQA,MAAI,QAAQ,KAAK,mBAAmB,CAAC,IAArC,EAA2C;AACzC,WAAO,IAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAE,UAAU,CAAC,QAFxB;AAGE,IAAA,KAAK,EAAE,yBAHT;AAIE,IAAA,KAAK,EAAE,aAJT;AAKE,IAAA,GAAG,EAAE;AALP,GAAA,EAOG,UAAU,IACT,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AACH,IAAA,SAAS,EAAE,UAAU,CAAC,YADnB;AAEH,IAAA,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC,QAAP,EAAiB,KAAK,CAAC,aAAvB,CAFpB;AAGH,IAAA,KAAK,EAAE;AAHJ,GAAL,CARJ,CADF;AAiBD,CArEkF,CAA5E;AAsEP,mBAAmB,CAAC,WAApB,GAAkC,qBAAlC;;AAEA,SAAS,aAAT,CACE,QADF,EAEE,aAFF,EAEoC;AAElC,MAAI,CAAC,QAAL,EAAe;AACb,WAAO,SAAP;AACD;;AAED,MAAM,OAAO,GAAG,YAAhB;;AAEA,UAAQ,mBAAmB,CAAC,QAAD,CAA3B;AACE,SAAK,QAAL;AACE,aAAO,YAAP;;AACF,SAAK,MAAL;AACE,aAAO,aAAa,GAAG,OAAH,GAAa,YAAjC;;AACF,SAAK,KAAL;AACE,aAAO,YAAP;;AACF,SAAK,SAAL;AACE,aAAO,aAAa,GAAG,OAAH,GAAa,EAAjC;AARJ;;AAWA,SAAO,EAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport {\n  IPersonaPresenceProps,\n  IPersonaPresenceStyleProps,\n  IPersonaPresenceStyles,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nimport { useMergedRefs } from '@fluentui/react-hooks';\n\nconst coinSizeFontScaleFactor = 6;\nconst coinSizePresenceScaleFactor = 3;\nconst presenceMaxSize = 40;\nconst presenceFontMaxSize = 20;\n\nconst getClassNames = classNamesFunction<IPersonaPresenceStyleProps, IPersonaPresenceStyles>({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport const PersonaPresenceBase: React.FunctionComponent<IPersonaPresenceProps> = React.forwardRef<\n  HTMLDivElement,\n  IPersonaPresenceProps\n>((props, forwardedRef) => {\n  const {\n    coinSize,\n    isOutOfOffice,\n    styles, // Use getStyles from props.\n    presence,\n    theme,\n    presenceTitle,\n    presenceColors,\n  } = props;\n\n  const rootRef = React.useRef<HTMLDivElement>(null);\n  const mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n\n  const size = sizeBoolean(props.size as PersonaSize);\n\n  // Render Presence Icon if Persona is above size 32.\n  const renderIcon =\n    !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n    (coinSize ? coinSize > 32 : true);\n\n  const presenceHeightWidth: string = coinSize\n    ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n      ? coinSize / coinSizePresenceScaleFactor + 'px'\n      : presenceMaxSize + 'px'\n    : '';\n  const presenceFontSize: string = coinSize\n    ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n      ? coinSize / coinSizeFontScaleFactor + 'px'\n      : presenceFontMaxSize + 'px'\n    : '';\n  const coinSizeWithPresenceIconStyle = coinSize\n    ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n    : undefined;\n  const coinSizeWithPresenceStyle = coinSize ? { width: presenceHeightWidth, height: presenceHeightWidth } : undefined;\n\n  // Use getStyles from props, or fall back to getStyles from styles file.\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    presence,\n    size: props.size,\n    isOutOfOffice,\n    presenceColors,\n  });\n\n  if (presence === PersonaPresenceEnum.none) {\n    return null;\n  }\n\n  return (\n    <div\n      role=\"presentation\"\n      className={classNames.presence}\n      style={coinSizeWithPresenceStyle}\n      title={presenceTitle}\n      ref={mergedRootRef}\n    >\n      {renderIcon && (\n        <Icon\n          className={classNames.presenceIcon}\n          iconName={determineIcon(props.presence, props.isOutOfOffice)}\n          style={coinSizeWithPresenceIconStyle}\n        />\n      )}\n    </div>\n  );\n});\nPersonaPresenceBase.displayName = 'PersonaPresenceBase';\n\nfunction determineIcon(\n  presence: PersonaPresenceEnum | undefined,\n  isOutOfOffice: boolean | undefined,\n): string | undefined {\n  if (!presence) {\n    return undefined;\n  }\n\n  const oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { compareDatePart } from '../dateMath/dateMath';\n/**\n * Checks if `date` happens earlier than min date\n * @param date - date to check\n * @param options - object with min date to check against\n */\n\nexport var isBeforeMinDate = function (date, options) {\n  var minDate = options.minDate;\n  return minDate ? compareDatePart(minDate, date) >= 1 : false;\n};","map":{"version":3,"sources":["dateGrid/isBeforeMinDate.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,sBAAhC;AAEA;;;;AAIG;;AACH,OAAO,IAAM,eAAe,GAAG,UAAC,IAAD,EAAa,OAAb,EAA6C;AAClE,MAAA,OAAO,GAAK,OAAO,CAAZ,OAAP;AACR,SAAO,OAAO,GAAG,eAAe,CAAC,OAAD,EAAU,IAAV,CAAf,IAAkC,CAArC,GAAyC,KAAvD;AACD,CAHM","sourcesContent":["import { IRestrictedDatesOptions } from './dateGrid.types';\nimport { compareDatePart } from '../dateMath/dateMath';\n\n/**\n * Checks if `date` happens earlier than min date\n * @param date - date to check\n * @param options - object with min date to check against\n */\nexport const isBeforeMinDate = (date: Date, options: IRestrictedDatesOptions): boolean => {\n  const { minDate } = options;\n  return minDate ? compareDatePart(minDate, date) >= 1 : false;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
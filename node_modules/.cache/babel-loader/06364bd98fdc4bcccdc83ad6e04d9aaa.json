{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, divProperties, memoizeFunction, getInitials, getNativeProps, getRTL, getPropsWithDefaults } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nimport { useWarnings } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\nvar getInitialsStyles = memoizeFunction(function (className, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin) {\n  return mergeStyles(className, !showUnknownPersonaCoin && {\n    backgroundColor: getPersonaInitialsColor({\n      text: text,\n      initialsColor: initialsColor,\n      primaryText: primaryText\n    }),\n    color: initialsTextColor\n  });\n});\nvar DEFAULT_PROPS = {\n  size: PersonaSize.size48,\n  presence: PersonaPresenceEnum.none,\n  imageAlt: ''\n};\n\nfunction useDebugWarnings(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'PersonaCoin',\n      props: props,\n      deprecations: {\n        primaryText: 'text'\n      }\n    });\n  }\n}\n\nfunction useImageLoadState(_a) {\n  var onPhotoLoadingStateChange = _a.onPhotoLoadingStateChange,\n      imageUrl = _a.imageUrl;\n\n  var _b = React.useState(ImageLoadState.notLoaded),\n      imageLoadState = _b[0],\n      setImageLoadstate = _b[1];\n\n  React.useEffect(function () {\n    setImageLoadstate(ImageLoadState.notLoaded);\n  }, [imageUrl]);\n\n  var onLoadingStateChange = function (loadState) {\n    var _a;\n\n    setImageLoadstate(loadState);\n    (_a = onPhotoLoadingStateChange) === null || _a === void 0 ? void 0 : _a(loadState);\n  };\n\n  return [imageLoadState, onLoadingStateChange];\n}\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\n\nexport var PersonaCoinBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n  var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  useDebugWarnings(props);\n\n  var _a = useImageLoadState(props),\n      imageLoadState = _a[0],\n      onLoadingStateChange = _a[1];\n\n  var renderCoin = getCoinRenderer(onLoadingStateChange);\n  var className = props.className,\n      coinProps = props.coinProps,\n      showUnknownPersonaCoin = props.showUnknownPersonaCoin,\n      coinSize = props.coinSize,\n      styles = props.styles,\n      imageUrl = props.imageUrl,\n      initialsColor = props.initialsColor,\n      initialsTextColor = props.initialsTextColor,\n      isOutOfOffice = props.isOutOfOffice,\n      // eslint-disable-next-line deprecation/deprecation\n  _b = props.onRenderCoin,\n      // eslint-disable-next-line deprecation/deprecation\n  onRenderCoin = _b === void 0 ? renderCoin : _b,\n      // eslint-disable-next-line deprecation/deprecation\n  _c = props.onRenderPersonaCoin,\n      // eslint-disable-next-line deprecation/deprecation\n  onRenderPersonaCoin = _c === void 0 ? onRenderCoin : _c,\n      _d = props.onRenderInitials,\n      onRenderInitials = _d === void 0 ? renderPersonaCoinInitials : _d,\n      presence = props.presence,\n      presenceTitle = props.presenceTitle,\n      presenceColors = props.presenceColors,\n      // eslint-disable-next-line deprecation/deprecation\n  primaryText = props.primaryText,\n      showInitialsUntilImageLoads = props.showInitialsUntilImageLoads,\n      text = props.text,\n      theme = props.theme,\n      size = props.size;\n  var divProps = getNativeProps(props, divProperties);\n  var divCoinProps = getNativeProps(coinProps || {}, divProperties);\n  var coinSizeStyle = coinSize ? {\n    width: coinSize,\n    height: coinSize\n  } : undefined;\n  var hideImage = showUnknownPersonaCoin;\n  var personaPresenceProps = {\n    coinSize: coinSize,\n    isOutOfOffice: isOutOfOffice,\n    presence: presence,\n    presenceTitle: presenceTitle,\n    presenceColors: presenceColors,\n    size: size,\n    theme: theme\n  }; // Use getStyles from props, or fall back to getStyles from styles file.\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: coinProps && coinProps.className ? coinProps.className : className,\n    size: size,\n    coinSize: coinSize,\n    showUnknownPersonaCoin: showUnknownPersonaCoin\n  });\n  var shouldRenderInitials = Boolean(imageLoadState !== ImageLoadState.loaded && (showInitialsUntilImageLoads && imageUrl || !imageUrl || imageLoadState === ImageLoadState.error || hideImage));\n  return React.createElement(\"div\", __assign({\n    role: \"presentation\"\n  }, divProps, {\n    className: classNames.coin,\n    ref: forwardedRef\n  }), // eslint-disable-next-line deprecation/deprecation\n  size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? React.createElement(\"div\", __assign({\n    role: \"presentation\"\n  }, divCoinProps, {\n    className: classNames.imageArea,\n    style: coinSizeStyle\n  }), shouldRenderInitials && React.createElement(\"div\", {\n    className: getInitialsStyles(classNames.initials, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin),\n    style: coinSizeStyle,\n    \"aria-hidden\": \"true\"\n  }, onRenderInitials(props, renderPersonaCoinInitials)), !hideImage && onRenderPersonaCoin(props, renderCoin), React.createElement(PersonaPresence, __assign({}, personaPresenceProps))) : // Otherwise, render just PersonaPresence.\n  props.presence ? React.createElement(PersonaPresence, __assign({}, personaPresenceProps)) : // Just render Contact Icon if there isn't a Presence prop.\n  React.createElement(Icon, {\n    iconName: \"Contact\",\n    className: classNames.size10WithoutPresenceIcon\n  }), props.children);\n});\nPersonaCoinBase.displayName = 'PersonaCoinBase';\n\nvar getCoinRenderer = function (onLoadingStateChange) {\n  return function (_a) {\n    var coinSize = _a.coinSize,\n        styles = _a.styles,\n        imageUrl = _a.imageUrl,\n        imageAlt = _a.imageAlt,\n        imageShouldFadeIn = _a.imageShouldFadeIn,\n        imageShouldStartVisible = _a.imageShouldStartVisible,\n        theme = _a.theme,\n        showUnknownPersonaCoin = _a.showUnknownPersonaCoin,\n        _b = _a.size,\n        size = _b === void 0 ? DEFAULT_PROPS.size : _b; // Render the Image component only if an image URL is provided\n\n    if (!imageUrl) {\n      return null;\n    }\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      size: size,\n      showUnknownPersonaCoin: showUnknownPersonaCoin\n    });\n    var dimension = coinSize || sizeToPixels[size];\n    return React.createElement(Image, {\n      className: classNames.image,\n      imageFit: ImageFit.cover,\n      src: imageUrl,\n      width: dimension,\n      height: dimension,\n      alt: imageAlt,\n      shouldFadeIn: imageShouldFadeIn,\n      shouldStartVisible: imageShouldStartVisible,\n      onLoadingStateChange: onLoadingStateChange\n    });\n  };\n};\n\nvar renderPersonaCoinInitials = function (_a) {\n  var imageInitials = _a.imageInitials,\n      allowPhoneInitials = _a.allowPhoneInitials,\n      showUnknownPersonaCoin = _a.showUnknownPersonaCoin,\n      text = _a.text,\n      // eslint-disable-next-line deprecation/deprecation\n  primaryText = _a.primaryText,\n      theme = _a.theme;\n\n  if (showUnknownPersonaCoin) {\n    return React.createElement(Icon, {\n      iconName: \"Help\"\n    });\n  }\n\n  var isRTL = getRTL(theme);\n  imageInitials = imageInitials || getInitials(text || primaryText || '', isRTL, allowPhoneInitials);\n  return imageInitials !== '' ? React.createElement(\"span\", null, imageInitials) : React.createElement(Icon, {\n    iconName: \"Contact\"\n  });\n};","map":{"version":3,"sources":["components/Persona/PersonaCoin/PersonaCoin.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SACE,kBADF,EAEE,aAFF,EAGE,eAHF,EAIE,WAJF,EAKE,cALF,EAME,MANF,EAOE,oBAPF,QAQO,oBARP;AASA,SAAS,WAAT,QAA4B,kBAA5B;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,IAAT,QAAqB,eAArB;AACA,SAAS,KAAT,EAAgB,QAAhB,EAA0B,cAA1B,QAAgD,gBAAhD;AACA,SAME,eAAe,IAAI,mBANrB,EAOE,WAPF,QAQO,kBARP;AASA,SAAS,uBAAT,QAAwC,yBAAxC;AACA,SAAS,YAAT,QAA6B,kBAA7B;AACA,SAAS,WAAT,QAA4B,uBAA5B;AAEA,IAAM,aAAa,GAAG,kBAAkB,CAA6C;AACnF;AACA;AACA,EAAA,SAAS,EAAE;AAHwE,CAA7C,CAAxC;AAMA,IAAM,iBAAiB,GAAG,eAAe,CACvC,UACE,SADF,EAEE,aAFF,EAGE,iBAHF,EAIE,IAJF,EAKE,WALF,EAME,sBANF,EAM6C;AAE3C,SAAA,WAAW,CACT,SADS,EAET,CAAC,sBAAD,IAA2B;AACzB,IAAA,eAAe,EAAE,uBAAuB,CAAC;AAAE,MAAA,IAAI,EAAA,IAAN;AAAQ,MAAA,aAAa,EAAA,aAArB;AAAuB,MAAA,WAAW,EAAA;AAAlC,KAAD,CADf;AAEzB,IAAA,KAAK,EAAE;AAFkB,GAFlB,CAAX;AAMC,CAfoC,CAAzC;AAkBA,IAAM,aAAa,GAAG;AACpB,EAAA,IAAI,EAAE,WAAW,CAAC,MADE;AAEpB,EAAA,QAAQ,EAAE,mBAAmB,CAAC,IAFV;AAGpB,EAAA,QAAQ,EAAE;AAHU,CAAtB;;AAMA,SAAS,gBAAT,CAA0B,KAA1B,EAAkD;AAChD,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA,IAAA,WAAW,CAAC;AACV,MAAA,IAAI,EAAE,aADI;AAEV,MAAA,KAAK,EAAA,KAFK;AAGV,MAAA,YAAY,EAAE;AAAE,QAAA,WAAW,EAAE;AAAf;AAHJ,KAAD,CAAX;AAKD;AACF;;AAED,SAAS,iBAAT,CAA2B,EAA3B,EAAqF;MAAxD,yBAAA,GAAA,EAAA,CAAA,yB;MAA2B,QAAA,GAAA,EAAA,CAAA,Q;;AAChD,MAAA,EAAA,GAAA,KAAA,CAAA,QAAA,CAAA,cAAA,CAAA,SAAA,CAAA;AAAA,MAAC,cAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAiB,iBAAA,GAAA,EAAA,CAAA,CAAA,CAAjB;;AAEN,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,IAAA,iBAAiB,CAAC,cAAc,CAAC,SAAhB,CAAjB;AACD,GAFD,EAEG,CAAC,QAAD,CAFH;;AAIA,MAAM,oBAAoB,GAAG,UAAC,SAAD,EAA0B;;;AACrD,IAAA,iBAAiB,CAAC,SAAD,CAAjB;AAEA,KAAA,EAAA,GAAA,yBAAA,MAAyB,IAAzB,IAAyB,EAAA,KAAA,KAAA,CAAzB,GAAyB,KAAA,CAAzB,GAAyB,EAAA,CAAG,SAAH,CAAzB;AACD,GAJD;;AAMA,SAAO,CAAC,cAAD,EAAiB,oBAAjB,CAAP;AACD;AAED;;;AAGG;;;AACH,OAAO,IAAM,eAAe,GAA+C,KAAK,CAAC,UAAN,CAGzE,UAAC,oBAAD,EAAuB,YAAvB,EAAmC;AACnC,MAAM,KAAK,GAAG,oBAAoB,CAAC,aAAD,EAAgB,oBAAhB,CAAlC;AAEA,EAAA,gBAAgB,CAAC,KAAD,CAAhB;;AAEM,MAAA,EAAA,GAAA,iBAAA,CAAA,KAAA,CAAA;AAAA,MAAC,cAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,MAAiB,oBAAA,GAAA,EAAA,CAAA,CAAA,CAAjB;;AAEN,MAAM,UAAU,GAAG,eAAe,CAAC,oBAAD,CAAlC;AAGE,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MACA,SAAA,GAAA,KAAA,CAAA,SADA;AAAA,MAEA,sBAAA,GAAA,KAAA,CAAA,sBAFA;AAAA,MAGA,QAAA,GAAA,KAAA,CAAA,QAHA;AAAA,MAIA,MAAA,GAAA,KAAA,CAAA,MAJA;AAAA,MAKA,QAAA,GAAA,KAAA,CAAA,QALA;AAAA,MAMA,aAAA,GAAA,KAAA,CAAA,aANA;AAAA,MAOA,iBAAA,GAAA,KAAA,CAAA,iBAPA;AAAA,MAQA,aAAA,GAAA,KAAA,CAAA,aARA;AAAA,MASA;AACA,EAAA,EAAA,GAAA,KAAA,CAAA,YAVA;AAAA,MASA;AACA,EAAA,YAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,UAAA,GAAA,EAVA;AAAA,MAWA;AACA,EAAA,EAAA,GAAA,KAAA,CAAA,mBAZA;AAAA,MAWA;AACA,EAAA,mBAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,YAAA,GAAA,EAZA;AAAA,MAaA,EAAA,GAAA,KAAA,CAAA,gBAbA;AAAA,MAaA,gBAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,yBAAA,GAAA,EAbA;AAAA,MAcA,QAAA,GAAA,KAAA,CAAA,QAdA;AAAA,MAeA,aAAA,GAAA,KAAA,CAAA,aAfA;AAAA,MAgBA,cAAA,GAAA,KAAA,CAAA,cAhBA;AAAA,MAiBA;AACA,EAAA,WAAA,GAAA,KAAA,CAAA,WAlBA;AAAA,MAmBA,2BAAA,GAAA,KAAA,CAAA,2BAnBA;AAAA,MAoBA,IAAA,GAAA,KAAA,CAAA,IApBA;AAAA,MAqBA,KAAA,GAAA,KAAA,CAAA,KArBA;AAAA,MAsBA,IAAA,GAAA,KAAA,CAAA,IAtBA;AAyBF,MAAM,QAAQ,GAAG,cAAc,CAAuC,KAAvC,EAA8C,aAA9C,CAA/B;AACA,MAAM,YAAY,GAAG,cAAc,CAAuC,SAAS,IAAI,EAApD,EAAwD,aAAxD,CAAnC;AACA,MAAM,aAAa,GAAG,QAAQ,GAAG;AAAE,IAAA,KAAK,EAAE,QAAT;AAAmB,IAAA,MAAM,EAAE;AAA3B,GAAH,GAA2C,SAAzE;AACA,MAAM,SAAS,GAAG,sBAAlB;AAEA,MAAM,oBAAoB,GAA0B;AAClD,IAAA,QAAQ,EAAA,QAD0C;AAElD,IAAA,aAAa,EAAA,aAFqC;AAGlD,IAAA,QAAQ,EAAA,QAH0C;AAIlD,IAAA,aAAa,EAAA,aAJqC;AAKlD,IAAA,cAAc,EAAA,cALoC;AAMlD,IAAA,IAAI,EAAA,IAN8C;AAOlD,IAAA,KAAK,EAAA;AAP6C,GAApD,CAxCmC,CAkDnC;;AACA,MAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,IAAA,KAAK,EAAE,KADgC;AAEvC,IAAA,SAAS,EAAE,SAAS,IAAI,SAAS,CAAC,SAAvB,GAAmC,SAAS,CAAC,SAA7C,GAAyD,SAF7B;AAGvC,IAAA,IAAI,EAAA,IAHmC;AAIvC,IAAA,QAAQ,EAAA,QAJ+B;AAKvC,IAAA,sBAAsB,EAAA;AALiB,GAAT,CAAhC;AAQA,MAAM,oBAAoB,GAAG,OAAO,CAClC,cAAc,KAAK,cAAc,CAAC,MAAlC,KACI,2BAA2B,IAAI,QAAhC,IAA6C,CAAC,QAA9C,IAA0D,cAAc,KAAK,cAAc,CAAC,KAA5F,IAAqG,SADxG,CADkC,CAApC;AAKA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,IAAI,EAAC;AAAV,GAAA,EAA6B,QAA7B,EAAqC;AAAE,IAAA,SAAS,EAAE,UAAU,CAAC,IAAxB;AAA8B,IAAA,GAAG,EAAE;AAAnC,GAArC,CAAA,EAEE;AACA,EAAA,IAAI,KAAK,WAAW,CAAC,KAArB,IAA8B,IAAI,KAAK,WAAW,CAAC,MAAnD,IAA6D,IAAI,KAAK,WAAW,CAAC,IAAlF,GACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,IAAI,EAAC;AAAV,GAAA,EAA6B,YAA7B,EAAyC;AAAE,IAAA,SAAS,EAAE,UAAU,CAAC,SAAxB;AAAmC,IAAA,KAAK,EAAE;AAA1C,GAAzC,CAAA,EACG,oBAAoB,IACnB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,iBAAiB,CAC1B,UAAU,CAAC,QADe,EAE1B,aAF0B,EAG1B,iBAH0B,EAI1B,IAJ0B,EAK1B,WAL0B,EAM1B,sBAN0B,CAD9B;AASE,IAAA,KAAK,EAAE,aATT;AASsB,mBACR;AAVd,GAAA,EAYG,gBAAgB,CAAC,KAAD,EAAQ,yBAAR,CAZnB,CAFJ,EAiBG,CAAC,SAAD,IAAc,mBAAmB,CAAC,KAAD,EAAQ,UAAR,CAjBpC,EAkBE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,QAAA,CAAA,EAAA,EAAK,oBAAL,CAAhB,CAlBF,CADF,GAqBI;AACJ,EAAA,KAAK,CAAC,QAAN,GACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,QAAA,CAAA,EAAA,EAAK,oBAAL,CAAhB,CADF,GAGE;AACA,EAAA,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,QAAQ,EAAC,SAAV;AAAoB,IAAA,SAAS,EAAE,UAAU,CAAC;AAA1C,GAAL,CA7BJ,EA+BG,KAAK,CAAC,QA/BT,CADF;AAmCD,CAtG0E,CAApE;AAuGP,eAAe,CAAC,WAAhB,GAA8B,iBAA9B;;AAEA,IAAM,eAAe,GAAG,UAAC,oBAAD,EAA0D;AAAK,SAAA,UAAC,EAAD,EAUnE;QATlB,QAAA,GAAA,EAAA,CAAA,Q;QACA,MAAA,GAAA,EAAA,CAAA,M;QACA,QAAA,GAAA,EAAA,CAAA,Q;QACA,QAAA,GAAA,EAAA,CAAA,Q;QACA,iBAAA,GAAA,EAAA,CAAA,iB;QACA,uBAAA,GAAA,EAAA,CAAA,uB;QACA,KAAA,GAAA,EAAA,CAAA,K;QACA,sBAAA,GAAA,EAAA,CAAA,sB;QACA,EAAA,GAAA,EAAA,CAAA,I;QAAA,IAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,aAAA,CAAA,IAAA,GAAA,E,CACkB,CAClB;;AACA,QAAI,CAAC,QAAL,EAAe;AACb,aAAO,IAAP;AACD;;AACD,QAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,MAAA,KAAK,EAAE,KADgC;AAEvC,MAAA,IAAI,EAAA,IAFmC;AAGvC,MAAA,sBAAsB,EAAA;AAHiB,KAAT,CAAhC;AAKA,QAAM,SAAS,GAAG,QAAQ,IAAI,YAAY,CAAC,IAAD,CAA1C;AACA,WACE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AACJ,MAAA,SAAS,EAAE,UAAU,CAAC,KADlB;AAEJ,MAAA,QAAQ,EAAE,QAAQ,CAAC,KAFf;AAGJ,MAAA,GAAG,EAAE,QAHD;AAIJ,MAAA,KAAK,EAAE,SAJH;AAKJ,MAAA,MAAM,EAAE,SALJ;AAMJ,MAAA,GAAG,EAAE,QAND;AAOJ,MAAA,YAAY,EAAE,iBAPV;AAQJ,MAAA,kBAAkB,EAAE,uBARhB;AASJ,MAAA,oBAAoB,EAAE;AATlB,KAAN,CADF;AArBqF,GAAA;AAkCtF,CAlCD;;AAoCA,IAAM,yBAAyB,GAAG,UAAC,EAAD,EAQd;MAPlB,aAAA,GAAA,EAAA,CAAA,a;MACA,kBAAA,GAAA,EAAA,CAAA,kB;MACA,sBAAA,GAAA,EAAA,CAAA,sB;MACA,IAAA,GAAA,EAAA,CAAA,I;MACA;AACA,EAAA,WAAA,GAAA,EAAA,CAAA,W;MACA,KAAA,GAAA,EAAA,CAAA,K;;AAEA,MAAI,sBAAJ,EAA4B;AAC1B,WAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,QAAQ,EAAC;AAAV,KAAL,CAAP;AACD;;AAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAD,CAApB;AAEA,EAAA,aAAa,GAAG,aAAa,IAAI,WAAW,CAAC,IAAI,IAAI,WAAR,IAAuB,EAAxB,EAA4B,KAA5B,EAAmC,kBAAnC,CAA5C;AAEA,SAAO,aAAa,KAAK,EAAlB,GAAuB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAO,aAAP,CAAvB,GAAsD,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,QAAQ,EAAC;AAAV,GAAL,CAA7D;AACD,CAlBD","sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  divProperties,\n  memoizeFunction,\n  getInitials,\n  getNativeProps,\n  getRTL,\n  getPropsWithDefaults,\n} from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport {\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n  IPersonaPresenceProps,\n  PersonaInitialsColor,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nimport { useWarnings } from '@fluentui/react-hooks';\n\nconst getClassNames = classNamesFunction<IPersonaCoinStyleProps, IPersonaCoinStyles>({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nconst getInitialsStyles = memoizeFunction(\n  (\n    className: string,\n    initialsColor: PersonaInitialsColor | string | undefined,\n    initialsTextColor: string | undefined,\n    text: string | undefined,\n    primaryText: string | undefined,\n    showUnknownPersonaCoin: boolean | undefined,\n  ) =>\n    mergeStyles(\n      className,\n      !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor({ text, initialsColor, primaryText }),\n        color: initialsTextColor,\n      },\n    ),\n);\n\nconst DEFAULT_PROPS = {\n  size: PersonaSize.size48,\n  presence: PersonaPresenceEnum.none,\n  imageAlt: '',\n};\n\nfunction useDebugWarnings(props: IPersonaCoinProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'PersonaCoin',\n      props,\n      deprecations: { primaryText: 'text' },\n    });\n  }\n}\n\nfunction useImageLoadState({ onPhotoLoadingStateChange, imageUrl }: IPersonaCoinProps) {\n  const [imageLoadState, setImageLoadstate] = React.useState<ImageLoadState>(ImageLoadState.notLoaded);\n\n  React.useEffect(() => {\n    setImageLoadstate(ImageLoadState.notLoaded);\n  }, [imageUrl]);\n\n  const onLoadingStateChange = (loadState: ImageLoadState) => {\n    setImageLoadstate(loadState);\n\n    onPhotoLoadingStateChange?.(loadState);\n  };\n\n  return [imageLoadState, onLoadingStateChange] as const;\n}\n\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport const PersonaCoinBase: React.FunctionComponent<IPersonaCoinProps> = React.forwardRef<\n  HTMLDivElement,\n  IPersonaCoinProps\n>((propsWithoutDefaults, forwardedRef) => {\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n  useDebugWarnings(props);\n\n  const [imageLoadState, onLoadingStateChange] = useImageLoadState(props);\n\n  const renderCoin = getCoinRenderer(onLoadingStateChange);\n\n  const {\n    className,\n    coinProps,\n    showUnknownPersonaCoin,\n    coinSize,\n    styles,\n    imageUrl,\n    initialsColor,\n    initialsTextColor,\n    isOutOfOffice,\n    // eslint-disable-next-line deprecation/deprecation\n    onRenderCoin = renderCoin,\n    // eslint-disable-next-line deprecation/deprecation\n    onRenderPersonaCoin = onRenderCoin,\n    onRenderInitials = renderPersonaCoinInitials,\n    presence,\n    presenceTitle,\n    presenceColors,\n    // eslint-disable-next-line deprecation/deprecation\n    primaryText,\n    showInitialsUntilImageLoads,\n    text,\n    theme,\n    size,\n  } = props;\n\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties);\n  const divCoinProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(coinProps || {}, divProperties);\n  const coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\n  const hideImage = showUnknownPersonaCoin;\n\n  const personaPresenceProps: IPersonaPresenceProps = {\n    coinSize,\n    isOutOfOffice,\n    presence,\n    presenceTitle,\n    presenceColors,\n    size,\n    theme,\n  };\n\n  // Use getStyles from props, or fall back to getStyles from styles file.\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: coinProps && coinProps.className ? coinProps.className : className,\n    size,\n    coinSize,\n    showUnknownPersonaCoin,\n  });\n\n  const shouldRenderInitials = Boolean(\n    imageLoadState !== ImageLoadState.loaded &&\n      ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || imageLoadState === ImageLoadState.error || hideImage),\n  );\n\n  return (\n    <div role=\"presentation\" {...divProps} className={classNames.coin} ref={forwardedRef}>\n      {// Render PersonaCoin if size is not size8. size10 and tiny need to removed after a deprecation cleanup.\n      // eslint-disable-next-line deprecation/deprecation\n      size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (\n        <div role=\"presentation\" {...divCoinProps} className={classNames.imageArea} style={coinSizeStyle}>\n          {shouldRenderInitials && (\n            <div\n              className={getInitialsStyles(\n                classNames.initials,\n                initialsColor,\n                initialsTextColor,\n                text,\n                primaryText,\n                showUnknownPersonaCoin,\n              )}\n              style={coinSizeStyle}\n              aria-hidden=\"true\"\n            >\n              {onRenderInitials(props, renderPersonaCoinInitials)}\n            </div>\n          )}\n          {!hideImage && onRenderPersonaCoin(props, renderCoin)}\n          <PersonaPresence {...personaPresenceProps} />\n        </div>\n      ) : // Otherwise, render just PersonaPresence.\n      props.presence ? (\n        <PersonaPresence {...personaPresenceProps} />\n      ) : (\n        // Just render Contact Icon if there isn't a Presence prop.\n        <Icon iconName=\"Contact\" className={classNames.size10WithoutPresenceIcon} />\n      )}\n      {props.children}\n    </div>\n  );\n});\nPersonaCoinBase.displayName = 'PersonaCoinBase';\n\nconst getCoinRenderer = (onLoadingStateChange: (loadState: ImageLoadState) => void) => ({\n  coinSize,\n  styles,\n  imageUrl,\n  imageAlt,\n  imageShouldFadeIn,\n  imageShouldStartVisible,\n  theme,\n  showUnknownPersonaCoin,\n  size = DEFAULT_PROPS.size,\n}: IPersonaCoinProps): JSX.Element | null => {\n  // Render the Image component only if an image URL is provided\n  if (!imageUrl) {\n    return null;\n  }\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    size,\n    showUnknownPersonaCoin,\n  });\n  const dimension = coinSize || sizeToPixels[size];\n  return (\n    <Image\n      className={classNames.image}\n      imageFit={ImageFit.cover}\n      src={imageUrl}\n      width={dimension}\n      height={dimension}\n      alt={imageAlt}\n      shouldFadeIn={imageShouldFadeIn}\n      shouldStartVisible={imageShouldStartVisible}\n      onLoadingStateChange={onLoadingStateChange}\n    />\n  );\n};\n\nconst renderPersonaCoinInitials = ({\n  imageInitials,\n  allowPhoneInitials,\n  showUnknownPersonaCoin,\n  text,\n  // eslint-disable-next-line deprecation/deprecation\n  primaryText,\n  theme,\n}: IPersonaCoinProps): JSX.Element => {\n  if (showUnknownPersonaCoin) {\n    return <Icon iconName=\"Help\" />;\n  }\n\n  const isRTL = getRTL(theme);\n\n  imageInitials = imageInitials || getInitials(text || primaryText || '', isRTL, allowPhoneInitials);\n\n  return imageInitials !== '' ? <span>{imageInitials}</span> : <Icon iconName=\"Contact\" />;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
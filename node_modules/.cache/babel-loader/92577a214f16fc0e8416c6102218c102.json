{"ast":null,"code":"import * as React from 'react';\nimport { useCallback } from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { Link } from '../../Link';\nimport { GroupSpacer } from './GroupSpacer';\nvar getClassNames = classNamesFunction();\nexport var GroupShowAllBase = function (props) {\n  var group = props.group,\n      groupLevel = props.groupLevel,\n      _a = props.showAllLinkText,\n      showAllLinkText = _a === void 0 ? 'Show All' : _a,\n      styles = props.styles,\n      theme = props.theme,\n      onToggleSummarize = props.onToggleSummarize;\n  var classNames = getClassNames(styles, {\n    theme: theme\n  });\n  var memoizedOnClick = useCallback(function (ev) {\n    onToggleSummarize(group);\n    ev.stopPropagation();\n    ev.preventDefault();\n  }, [onToggleSummarize, group]);\n\n  if (group) {\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, React.createElement(GroupSpacer, {\n      count: groupLevel\n    }), React.createElement(Link, {\n      onClick: memoizedOnClick\n    }, showAllLinkText));\n  }\n\n  return null;\n};","map":{"version":3,"sources":["components/GroupedList/GroupShowAll.base.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,WAAT,QAA4B,OAA5B;AACA,SAAS,kBAAT,QAAmC,iBAAnC;AACA,SAAS,IAAT,QAAqB,YAArB;AAGA,SAAS,WAAT,QAA4B,eAA5B;AAEA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA,OAAO,IAAM,gBAAgB,GAAgD,UAAA,KAAA,EAAK;AACxE,MAAA,KAAK,GAAiF,KAAK,CAAtF,KAAL;AAAA,MAAO,UAAU,GAAqE,KAAK,CAA1E,UAAjB;AAAA,MAAmB,EAAA,GAAmE,KAAK,CAA5C,eAA/C;AAAA,MAAmB,eAAe,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,UAAH,GAAa,EAA/C;AAAA,MAAiD,MAAM,GAA+B,KAAK,CAApC,MAAvD;AAAA,MAAyD,KAAK,GAAwB,KAAK,CAA7B,KAA9D;AAAA,MAAgE,iBAAiB,GAAK,KAAK,CAAV,iBAAjF;AACR,MAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AAAE,IAAA,KAAK,EAAE;AAAT,GAAT,CAAhC;AAEA,MAAM,eAAe,GAAG,WAAW,CACjC,UAAC,EAAD,EAAkC;AAChC,IAAA,iBAAkB,CAAC,KAAD,CAAlB;AAEA,IAAA,EAAE,CAAC,eAAH;AACA,IAAA,EAAE,CAAC,cAAH;AACD,GANgC,EAOjC,CAAC,iBAAD,EAAoB,KAApB,CAPiC,CAAnC;;AAUA,MAAI,KAAJ,EAAW;AACT,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AAAC,MAAA,KAAK,EAAE;AAAR,KAAZ,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,OAAO,EAAE;AAAV,KAAL,EAAiC,eAAjC,CAFF,CADF;AAMD;;AAED,SAAO,IAAP;AACD,CAxBM","sourcesContent":["import * as React from 'react';\nimport { useCallback } from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { Link } from '../../Link';\nimport { IGroupShowAllProps } from './GroupShowAll.types';\nimport { IGroupShowAllStyleProps, IGroupShowAllStyles } from './GroupShowAll.types';\nimport { GroupSpacer } from './GroupSpacer';\n\nconst getClassNames = classNamesFunction<IGroupShowAllStyleProps, IGroupShowAllStyles>();\n\nexport const GroupShowAllBase: React.FunctionComponent<IGroupShowAllProps> = props => {\n  const { group, groupLevel, showAllLinkText = 'Show All', styles, theme, onToggleSummarize } = props;\n  const classNames = getClassNames(styles, { theme: theme! });\n\n  const memoizedOnClick = useCallback(\n    (ev: React.MouseEvent<HTMLElement>) => {\n      onToggleSummarize!(group!);\n\n      ev.stopPropagation();\n      ev.preventDefault();\n    },\n    [onToggleSummarize, group],\n  );\n\n  if (group) {\n    return (\n      <div className={classNames.root}>\n        <GroupSpacer count={groupLevel!} />\n        <Link onClick={memoizedOnClick}>{showAllLinkText}</Link>\n      </div>\n    );\n  }\n\n  return null;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { extendComponent } from './extendComponent';\n/**\n * Generates a function to be attached to a React component, which can be called\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\n * is unmounting before the async code is executed, preventing bugs where code\n * accesses things within the component after being unmounted.\n */\n\nexport var safeRequestAnimationFrame = function (component) {\n  var activeTimeouts;\n  return function (cb) {\n    if (!activeTimeouts) {\n      activeTimeouts = new Set();\n      extendComponent(component, {\n        componentWillUnmount: function () {\n          activeTimeouts.forEach(function (id) {\n            return cancelAnimationFrame(id);\n          });\n        }\n      });\n    }\n\n    var timeoutId = requestAnimationFrame(function () {\n      activeTimeouts.delete(timeoutId);\n      cb();\n    });\n    activeTimeouts.add(timeoutId);\n  };\n};","map":{"version":3,"sources":["safeRequestAnimationFrame.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA;;;;;AAKG;;AACH,OAAO,IAAM,yBAAyB,GAAG,UAAC,SAAD,EAA2B;AAClE,MAAI,cAAJ;AAEA,SAAO,UAAC,EAAD,EAAa;AAClB,QAAI,CAAC,cAAL,EAAqB;AACnB,MAAA,cAAc,GAAG,IAAI,GAAJ,EAAjB;AAEA,MAAA,eAAe,CAAC,SAAD,EAAY;AACzB,QAAA,oBAAoB,EAAE,YAAA;AACpB,UAAA,cAAc,CAAC,OAAf,CAAuB,UAAC,EAAD,EAAW;AAAK,mBAAA,oBAAoB,CAApB,EAAoB,CAApB;AAAwB,WAA/D;AACD;AAHwB,OAAZ,CAAf;AAKD;;AAED,QAAM,SAAS,GAAG,qBAAqB,CAAC,YAAA;AACtC,MAAA,cAAc,CAAC,MAAf,CAAsB,SAAtB;AACA,MAAA,EAAE;AACH,KAHsC,CAAvC;AAKA,IAAA,cAAc,CAAC,GAAf,CAAmB,SAAnB;AACD,GAjBD;AAkBD,CArBM","sourcesContent":["import * as React from 'react';\nimport { extendComponent } from './extendComponent';\n\n/**\n * Generates a function to be attached to a React component, which can be called\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\n * is unmounting before the async code is executed, preventing bugs where code\n * accesses things within the component after being unmounted.\n */\nexport const safeRequestAnimationFrame = (component: React.Component): ((cb: Function) => void) => {\n  let activeTimeouts: Set<number>;\n\n  return (cb: Function) => {\n    if (!activeTimeouts) {\n      activeTimeouts = new Set<number>();\n\n      extendComponent(component, {\n        componentWillUnmount: () => {\n          activeTimeouts.forEach((id: number) => cancelAnimationFrame(id));\n        },\n      });\n    }\n\n    const timeoutId = requestAnimationFrame(() => {\n      activeTimeouts.delete(timeoutId);\n      cb();\n    });\n\n    activeTimeouts.add(timeoutId);\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
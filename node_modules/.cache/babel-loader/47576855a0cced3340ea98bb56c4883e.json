{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, getRTL, classNamesFunction, css, format } from '../../../Utilities';\nimport { FocusZone } from '../../../FocusZone';\nimport { Icon } from '../../../Icon';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nvar getClassNames = classNamesFunction();\nvar CELL_COUNT = 12;\nvar CELLS_PER_ROW = 4;\nvar DefaultCalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined\n};\n\nvar CalendarYearGridCell = function (props) {\n  var _a;\n\n  var _b;\n\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      highlightCurrentYear = props.highlightCurrentYear,\n      highlightSelectedYear = props.highlightSelectedYear,\n      year = props.year,\n      selected = props.selected,\n      disabled = props.disabled,\n      componentRef = props.componentRef,\n      onSelectYear = props.onSelectYear,\n      onRenderYear = props.onRenderYear;\n  var buttonRef = React.useRef(null);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function () {\n        var _a, _b;\n\n        (_b = (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  }, []);\n\n  var onClick = function () {\n    onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n  };\n\n  var onKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n    }\n  };\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    highlightCurrent: highlightCurrentYear,\n    highlightSelected: highlightSelectedYear\n  });\n  return React.createElement(\"button\", {\n    className: css(classNames.itemButton, (_a = {}, _a[classNames.selected] = selected, _a[classNames.disabled] = disabled, _a)),\n    type: \"button\",\n    role: \"gridcell\",\n    onClick: !disabled ? onClick : undefined,\n    onKeyDown: !disabled ? onKeyDown : undefined,\n    disabled: disabled,\n    \"aria-selected\": selected,\n    ref: buttonRef,\n    \"aria-readonly\": true\n  }, (_b = onRenderYear === null || onRenderYear === void 0 ? void 0 : onRenderYear(year)) !== null && _b !== void 0 ? _b : year);\n};\n\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\n\nvar CalendarYearGrid = function (props) {\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      fromYear = props.fromYear,\n      toYear = props.toYear,\n      animationDirection = props.animationDirection,\n      animateBackwards = props.animateBackwards,\n      minYear = props.minYear,\n      maxYear = props.maxYear,\n      onSelectYear = props.onSelectYear,\n      selectedYear = props.selectedYear,\n      componentRef = props.componentRef;\n  var selectedCellRef = React.useRef(null);\n  var currentCellRef = React.useRef(null);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function () {\n        var _a, _b;\n\n        (_b = (_a = selectedCellRef.current || currentCellRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  }, []);\n\n  var renderCell = function (yearToRender) {\n    var selected = yearToRender === selectedYear;\n    var disabled = minYear !== undefined && yearToRender < minYear || maxYear !== undefined && yearToRender > maxYear;\n    var current = yearToRender === new Date().getFullYear();\n    return React.createElement(CalendarYearGridCell, __assign({}, props, {\n      key: yearToRender,\n      year: yearToRender,\n      selected: selected,\n      current: current,\n      disabled: disabled,\n      onSelectYear: onSelectYear,\n      componentRef: selected ? selectedCellRef : current ? currentCellRef : undefined,\n      theme: theme\n    }));\n  };\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n\n  var onRenderYear = function (value) {\n    var _a, _b;\n\n    return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, value)) !== null && _b !== void 0 ? _b : value;\n  };\n\n  var gridAriaLabel = onRenderYear(fromYear) + \" - \" + onRenderYear(toYear);\n  var year = fromYear;\n  var cells = [];\n\n  for (var i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n    cells.push([]);\n\n    for (var j = 0; j < CELLS_PER_ROW; j++) {\n      cells[i].push(renderCell(year));\n      year++;\n    }\n  }\n\n  return React.createElement(FocusZone, null, React.createElement(\"div\", {\n    className: classNames.gridContainer,\n    role: \"grid\",\n    \"aria-label\": gridAriaLabel\n  }, cells.map(function (cellRow, index) {\n    return React.createElement(\"div\", {\n      key: 'yearPickerRow_' + index + '_' + fromYear,\n      role: \"row\",\n      className: classNames.buttonRow\n    }, cellRow);\n  })));\n};\n\nCalendarYearGrid.displayName = 'CalendarYearGrid';\nvar CalendarYearNavDirection;\n\n(function (CalendarYearNavDirection) {\n  CalendarYearNavDirection[CalendarYearNavDirection[\"Previous\"] = 0] = \"Previous\";\n  CalendarYearNavDirection[CalendarYearNavDirection[\"Next\"] = 1] = \"Next\";\n})(CalendarYearNavDirection || (CalendarYearNavDirection = {}));\n\nvar CalendarYearNavArrow = function (props) {\n  var _a;\n\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      _b = props.navigationIcons,\n      navigationIcons = _b === void 0 ? defaultCalendarNavigationIcons : _b,\n      _c = props.strings,\n      strings = _c === void 0 ? DefaultCalendarYearStrings : _c,\n      direction = props.direction,\n      onSelectPrev = props.onSelectPrev,\n      onSelectNext = props.onSelectNext,\n      fromYear = props.fromYear,\n      toYear = props.toYear,\n      maxYear = props.maxYear,\n      minYear = props.minYear;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  var ariaLabel = direction === 0\n  /* Previous */\n  ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n  var newRangeOffset = direction === 0\n  /* Previous */\n  ? -CELL_COUNT : CELL_COUNT;\n  var newRange = {\n    fromYear: fromYear + newRangeOffset,\n    toYear: toYear + newRangeOffset\n  };\n  var ariaLabelString = ariaLabel ? typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange) : undefined;\n  var disabled = direction === 0\n  /* Previous */\n  ? minYear !== undefined && fromYear < minYear : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n\n  var onNavigate = function () {\n    direction === 0\n    /* Previous */\n    ? onSelectPrev === null || onSelectPrev === void 0 ? void 0 : onSelectPrev() : onSelectNext === null || onSelectNext === void 0 ? void 0 : onSelectNext();\n  };\n\n  var onKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onNavigate();\n    }\n  }; // can be condensed, but leaving verbose for clarity due to regressions\n\n\n  var isLeftNavigation = getRTL() ? direction === 1\n  /* Next */\n  : direction === 0\n  /* Previous */\n  ;\n  return React.createElement(\"button\", {\n    className: css(classNames.navigationButton, (_a = {}, _a[classNames.disabled] = disabled, _a)),\n    onClick: !disabled ? onNavigate : undefined,\n    onKeyDown: !disabled ? onKeyDown : undefined,\n    type: \"button\",\n    title: ariaLabelString,\n    disabled: disabled\n  }, React.createElement(Icon, {\n    iconName: isLeftNavigation ? navigationIcons.leftNavigation : navigationIcons.rightNavigation\n  }));\n};\n\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\n\nvar CalendarYearNav = function (props) {\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  return React.createElement(\"div\", {\n    className: classNames.navigationButtonsContainer\n  }, React.createElement(CalendarYearNavArrow, __assign({}, props, {\n    direction: 0\n    /* Previous */\n\n  })), React.createElement(CalendarYearNavArrow, __assign({}, props, {\n    direction: 1\n    /* Next */\n\n  })));\n};\n\nCalendarYearNav.displayName = 'CalendarYearNav';\n\nvar CalendarYearTitle = function (props) {\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      fromYear = props.fromYear,\n      toYear = props.toYear,\n      _a = props.strings,\n      strings = _a === void 0 ? DefaultCalendarYearStrings : _a,\n      animateBackwards = props.animateBackwards,\n      animationDirection = props.animationDirection;\n\n  var onHeaderSelect = function () {\n    var _a;\n\n    (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props, true);\n  };\n\n  var onHeaderKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      onHeaderSelect();\n    }\n  };\n\n  var onRenderYear = function (year) {\n    var _a, _b;\n\n    return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, year)) !== null && _b !== void 0 ? _b : year;\n  };\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n\n  if (props.onHeaderSelect) {\n    var rangeAriaLabel = strings.rangeAriaLabel;\n    var headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n    var currentDateRange = rangeAriaLabel ? typeof rangeAriaLabel === 'string' ? rangeAriaLabel : rangeAriaLabel(props) : undefined;\n    var ariaLabel = headerAriaLabelFormatString ? format(headerAriaLabelFormatString, currentDateRange) : currentDateRange;\n    return React.createElement(\"button\", {\n      className: classNames.currentItemButton,\n      onClick: onHeaderSelect,\n      onKeyDown: onHeaderKeyDown,\n      \"aria-label\": ariaLabel,\n      role: \"button\",\n      type: \"button\",\n      \"aria-atomic\": true,\n      \"aria-live\": \"polite\"\n    }, onRenderYear(fromYear), \" - \", onRenderYear(toYear));\n  }\n\n  return React.createElement(\"div\", {\n    className: classNames.current\n  }, onRenderYear(fromYear), \" - \", onRenderYear(toYear));\n};\n\nCalendarYearTitle.displayName = 'CalendarYearTitle';\n\nvar CalendarYearHeader = function (props) {\n  var _a;\n\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      animateBackwards = props.animateBackwards,\n      animationDirection = props.animationDirection,\n      onRenderTitle = props.onRenderTitle;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n  return React.createElement(\"div\", {\n    className: classNames.headerContainer\n  }, (_a = onRenderTitle === null || onRenderTitle === void 0 ? void 0 : onRenderTitle(props)) !== null && _a !== void 0 ? _a : React.createElement(CalendarYearTitle, __assign({}, props)), React.createElement(CalendarYearNav, __assign({}, props)));\n};\n\nCalendarYearHeader.displayName = 'CalendarYearHeader';\n\nfunction useAnimateBackwards(_a) {\n  var selectedYear = _a.selectedYear,\n      navigatedYear = _a.navigatedYear;\n  var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n  var fromYear = Math.floor(rangeYear / 10) * 10;\n  var previousFromYear = usePrevious(fromYear);\n\n  if (!previousFromYear || previousFromYear === fromYear) {\n    return undefined;\n  } else if (previousFromYear > fromYear) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar NavigationDirection;\n\n(function (NavigationDirection) {\n  NavigationDirection[NavigationDirection[\"Previous\"] = 0] = \"Previous\";\n  NavigationDirection[NavigationDirection[\"Next\"] = 1] = \"Next\";\n})(NavigationDirection || (NavigationDirection = {}));\n\nfunction useYearRangeState(_a) {\n  var selectedYear = _a.selectedYear,\n      navigatedYear = _a.navigatedYear;\n\n  var _b = React.useReducer(function (state, action) {\n    return state + (action === 1\n    /* Next */\n    ? CELL_COUNT : -CELL_COUNT);\n  }, undefined, function () {\n    var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    return Math.floor(rangeYear / 10) * 10;\n  }),\n      fromYear = _b[0],\n      navigate = _b[1];\n\n  var toYear = fromYear + CELL_COUNT - 1;\n\n  var onNavNext = function () {\n    return navigate(1\n    /* Next */\n    );\n  };\n\n  var onNavPrevious = function () {\n    return navigate(0\n    /* Previous */\n    );\n  };\n\n  return [fromYear, toYear, onNavNext, onNavPrevious];\n}\n\nexport var CalendarYearBase = function (props) {\n  var animateBackwards = useAnimateBackwards(props);\n\n  var _a = useYearRangeState(props),\n      fromYear = _a[0],\n      toYear = _a[1],\n      onNavNext = _a[2],\n      onNavPrevious = _a[3];\n\n  var gridRef = React.useRef(null);\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      focus: function () {\n        var _a, _b;\n\n        (_b = (_a = gridRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  });\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(CalendarYearHeader, __assign({}, props, {\n    fromYear: fromYear,\n    toYear: toYear,\n    onSelectPrev: onNavPrevious,\n    onSelectNext: onNavNext,\n    animateBackwards: animateBackwards\n  })), React.createElement(CalendarYearGrid, __assign({}, props, {\n    fromYear: fromYear,\n    toYear: toYear,\n    animateBackwards: animateBackwards,\n    componentRef: gridRef\n  })));\n};\nCalendarYearBase.displayName = 'CalendarYearBase';","map":{"version":3,"sources":["components/Calendar/CalendarYear/CalendarYear.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ICalendarYearStrings,\n  ICalendarYearProps,\n  ICalendarYearRange,\n  ICalendarYearHeaderProps,\n  ICalendarYearStyleProps,\n  ICalendarYearStyles,\n} from './CalendarYear.types';\nimport { KeyCodes, getRTL, classNamesFunction, css, format, IRefObject } from '../../../Utilities';\nimport { FocusZone } from '../../../FocusZone';\nimport { Icon } from '../../../Icon';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\n\nconst getClassNames = classNamesFunction<ICalendarYearStyleProps, ICalendarYearStyles>();\n\nconst CELL_COUNT = 12;\nconst CELLS_PER_ROW = 4;\n\nconst DefaultCalendarYearStrings: ICalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined,\n};\ninterface ICalendarYearGrid {\n  focus(): void;\n}\n\ninterface ICalendarYearGridCellProps extends ICalendarYearProps {\n  year: number;\n  current?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  onSelectYear?: (year: number) => void;\n  onRenderYear?: (year: number) => React.ReactNode;\n}\n\ninterface ICalendarYearGridProps extends ICalendarYearProps, ICalendarYearRange {\n  selectedYear?: number;\n  animateBackwards?: boolean;\n  componentRef?: IRefObject<ICalendarYearGridCell>;\n}\n\ninterface ICalendarYearGridCell {\n  focus(): void;\n}\n\nconst CalendarYearGridCell: React.FunctionComponent<ICalendarYearGridCellProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    highlightCurrentYear,\n    highlightSelectedYear,\n    year,\n    selected,\n    disabled,\n    componentRef,\n    onSelectYear,\n    onRenderYear,\n  } = props;\n\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        buttonRef.current?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const onClick = () => {\n    onSelectYear?.(year);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectYear?.(year);\n    }\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    highlightCurrent: highlightCurrentYear,\n    highlightSelected: highlightSelectedYear,\n  });\n\n  return (\n    <button\n      className={css(classNames.itemButton, {\n        [classNames.selected]: selected,\n        [classNames.disabled]: disabled,\n      })}\n      type=\"button\"\n      role=\"gridcell\"\n      onClick={!disabled ? onClick : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      disabled={disabled}\n      aria-selected={selected}\n      ref={buttonRef}\n      aria-readonly={true} // prevent grid from being \"editable\"\n    >\n      {onRenderYear?.(year) ?? year}\n    </button>\n  );\n};\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\n\nconst CalendarYearGrid: React.FunctionComponent<ICalendarYearGridProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    fromYear,\n    toYear,\n    animationDirection,\n    animateBackwards,\n    minYear,\n    maxYear,\n    onSelectYear,\n    selectedYear,\n    componentRef,\n  } = props;\n\n  const selectedCellRef = React.useRef<ICalendarYearGridCell>(null);\n  const currentCellRef = React.useRef<ICalendarYearGridCell>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        (selectedCellRef.current || currentCellRef.current)?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const renderCell = (yearToRender: number): React.ReactNode => {\n    const selected = yearToRender === selectedYear;\n    const disabled =\n      (minYear !== undefined && yearToRender < minYear) || (maxYear !== undefined && yearToRender > maxYear);\n    const current = yearToRender === new Date().getFullYear();\n\n    return (\n      <CalendarYearGridCell\n        {...props}\n        key={yearToRender}\n        year={yearToRender}\n        selected={selected}\n        current={current}\n        disabled={disabled}\n        onSelectYear={onSelectYear}\n        componentRef={selected ? selectedCellRef : current ? currentCellRef : undefined}\n        theme={theme}\n      />\n    );\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection,\n  });\n\n  const onRenderYear = (value: number) => {\n    return props.onRenderYear?.(value) ?? value;\n  };\n\n  const gridAriaLabel = `${onRenderYear(fromYear)} - ${onRenderYear(toYear)}`;\n\n  let year = fromYear;\n  const cells: React.ReactNode[][] = [];\n\n  for (let i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n    cells.push([]);\n    for (let j = 0; j < CELLS_PER_ROW; j++) {\n      cells[i].push(renderCell(year));\n      year++;\n    }\n  }\n\n  return (\n    <FocusZone>\n      <div className={classNames.gridContainer} role=\"grid\" aria-label={gridAriaLabel}>\n        {cells.map((cellRow: React.ReactNode[], index: number) => {\n          return (\n            <div key={'yearPickerRow_' + index + '_' + fromYear} role=\"row\" className={classNames.buttonRow}>\n              {...cellRow}\n            </div>\n          );\n        })}\n      </div>\n    </FocusZone>\n  );\n};\nCalendarYearGrid.displayName = 'CalendarYearGrid';\n\nconst enum CalendarYearNavDirection {\n  Previous,\n  Next,\n}\n\ninterface ICalendarYearNavArrowProps extends ICalendarYearHeaderProps {\n  direction: CalendarYearNavDirection;\n}\n\nconst CalendarYearNavArrow: React.FunctionComponent<ICalendarYearNavArrowProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    navigationIcons = defaultCalendarNavigationIcons,\n    strings = DefaultCalendarYearStrings,\n    direction,\n    onSelectPrev,\n    onSelectNext,\n    fromYear,\n    toYear,\n    maxYear,\n    minYear,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n  });\n\n  const ariaLabel =\n    direction === CalendarYearNavDirection.Previous ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n  const newRangeOffset = direction === CalendarYearNavDirection.Previous ? -CELL_COUNT : CELL_COUNT;\n  const newRange = { fromYear: fromYear + newRangeOffset, toYear: toYear + newRangeOffset };\n  const ariaLabelString = ariaLabel ? (typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange)) : undefined;\n  const disabled =\n    direction === CalendarYearNavDirection.Previous\n      ? minYear !== undefined && fromYear < minYear\n      : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n\n  const onNavigate = () => {\n    direction === CalendarYearNavDirection.Previous ? onSelectPrev?.() : onSelectNext?.();\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onNavigate();\n    }\n  };\n\n  // can be condensed, but leaving verbose for clarity due to regressions\n  const isLeftNavigation = getRTL()\n    ? direction === CalendarYearNavDirection.Next\n    : direction === CalendarYearNavDirection.Previous;\n\n  return (\n    <button\n      className={css(classNames.navigationButton, {\n        [classNames.disabled]: disabled,\n      })}\n      onClick={!disabled ? onNavigate : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      type=\"button\"\n      title={ariaLabelString}\n      disabled={disabled}\n    >\n      <Icon iconName={isLeftNavigation ? navigationIcons.leftNavigation : navigationIcons.rightNavigation} />\n    </button>\n  );\n};\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\n\nconst CalendarYearNav: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const { styles, theme, className } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n  });\n\n  return (\n    <div className={classNames.navigationButtonsContainer}>\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Previous} />\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Next} />\n    </div>\n  );\n};\nCalendarYearNav.displayName = 'CalendarYearNav';\n\nconst CalendarYearTitle: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    fromYear,\n    toYear,\n    strings = DefaultCalendarYearStrings,\n    animateBackwards,\n    animationDirection,\n  } = props;\n\n  const onHeaderSelect = () => {\n    props.onHeaderSelect?.(true);\n  };\n\n  const onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      onHeaderSelect();\n    }\n  };\n\n  const onRenderYear = (year: number) => {\n    return props.onRenderYear?.(year) ?? year;\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection,\n  });\n\n  if (props.onHeaderSelect) {\n    const rangeAriaLabel = strings.rangeAriaLabel;\n    const headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n    const currentDateRange = rangeAriaLabel\n      ? typeof rangeAriaLabel === 'string'\n        ? rangeAriaLabel\n        : rangeAriaLabel(props)\n      : undefined;\n\n    const ariaLabel = headerAriaLabelFormatString\n      ? format(headerAriaLabelFormatString, currentDateRange)\n      : currentDateRange;\n\n    return (\n      <button\n        className={classNames.currentItemButton}\n        onClick={onHeaderSelect}\n        onKeyDown={onHeaderKeyDown}\n        aria-label={ariaLabel}\n        role=\"button\"\n        type=\"button\"\n        aria-atomic={true}\n        // if this component rerenders when text changes, aria-live will not be announced, so make key consistent\n        aria-live=\"polite\"\n      >\n        {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n      </button>\n    );\n  }\n\n  return (\n    <div className={classNames.current}>\n      {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n    </div>\n  );\n};\nCalendarYearTitle.displayName = 'CalendarYearTitle';\n\nconst CalendarYearHeader: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const { styles, theme, className, animateBackwards, animationDirection, onRenderTitle } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection,\n  });\n\n  return (\n    <div className={classNames.headerContainer}>\n      {onRenderTitle?.(props) ?? <CalendarYearTitle {...props} />}\n      <CalendarYearNav {...props} />\n    </div>\n  );\n};\nCalendarYearHeader.displayName = 'CalendarYearHeader';\n\nfunction useAnimateBackwards({ selectedYear, navigatedYear }: ICalendarYearProps) {\n  const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n  const fromYear = Math.floor(rangeYear / 10) * 10;\n\n  const previousFromYear = usePrevious(fromYear);\n\n  if (!previousFromYear || previousFromYear === fromYear) {\n    return undefined;\n  } else if (previousFromYear > fromYear) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst enum NavigationDirection {\n  Previous,\n  Next,\n}\n\nfunction useYearRangeState({ selectedYear, navigatedYear }: ICalendarYearProps) {\n  const [fromYear, navigate] = React.useReducer(\n    (state: number, action: NavigationDirection): number => {\n      return state + (action === NavigationDirection.Next ? CELL_COUNT : -CELL_COUNT);\n    },\n    undefined,\n    () => {\n      const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n      return Math.floor(rangeYear / 10) * 10;\n    },\n  );\n  const toYear = fromYear + CELL_COUNT - 1;\n\n  const onNavNext = () => navigate(NavigationDirection.Next);\n  const onNavPrevious = () => navigate(NavigationDirection.Previous);\n\n  return [fromYear, toYear, onNavNext, onNavPrevious] as const;\n}\n\nexport const CalendarYearBase: React.FunctionComponent<ICalendarYearProps> = props => {\n  const animateBackwards = useAnimateBackwards(props);\n  const [fromYear, toYear, onNavNext, onNavPrevious] = useYearRangeState(props);\n\n  const gridRef = React.useRef<ICalendarYearGrid>(null);\n\n  React.useImperativeHandle(props.componentRef, () => ({\n    focus() {\n      gridRef.current?.focus?.();\n    },\n  }));\n\n  const { styles, theme, className } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n  });\n\n  return (\n    <div className={classNames.root}>\n      <CalendarYearHeader\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        onSelectPrev={onNavPrevious}\n        onSelectNext={onNavNext}\n        animateBackwards={animateBackwards}\n      />\n      <CalendarYearGrid\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        animateBackwards={animateBackwards}\n        componentRef={gridRef}\n      />\n    </div>\n  );\n};\nCalendarYearBase.displayName = 'CalendarYearBase';\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
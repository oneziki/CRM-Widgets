{"ast":null,"code":"import { normalize, FontSizes, getFocusStyle } from '@fluentui/style-utilities';\nexport var styles = function (props) {\n  var className = props.className,\n      theme = props.theme,\n      isDayPickerVisible = props.isDayPickerVisible,\n      isMonthPickerVisible = props.isMonthPickerVisible,\n      showWeekNumbers = props.showWeekNumbers;\n  var palette = theme.palette;\n  var totalWidth = isDayPickerVisible && isMonthPickerVisible ? 440 : 220;\n\n  if (showWeekNumbers && isDayPickerVisible) {\n    totalWidth += 30;\n  }\n\n  return {\n    root: [normalize, {\n      display: 'flex',\n      width: totalWidth\n    }, !isMonthPickerVisible && {\n      flexDirection: 'column'\n    }, className],\n    divider: {\n      top: 0,\n      borderRight: '1px solid',\n      borderColor: palette.neutralLight\n    },\n    monthPickerWrapper: [{\n      display: 'flex',\n      flexDirection: 'column'\n    }],\n    goTodayButton: [getFocusStyle(theme, {\n      inset: -1\n    }), {\n      bottom: 0,\n      color: palette.neutralPrimary,\n      height: 30,\n      lineHeight: 30,\n      backgroundColor: 'transparent',\n      border: 'none',\n      boxSizing: 'content-box',\n      padding: '0 4px',\n      alignSelf: 'flex-end',\n      marginRight: 16,\n      marginTop: 3,\n      fontSize: FontSizes.small,\n      fontFamily: 'inherit',\n      overflow: 'visible',\n      selectors: {\n        '& div': {\n          fontSize: FontSizes.small\n        },\n        '&:hover': {\n          color: palette.themePrimary,\n          backgroundColor: 'transparent',\n          cursor: 'pointer'\n        },\n        '&:active': {\n          color: palette.themeDark\n        },\n        '&:disabled': {\n          color: palette.neutralTertiaryAlt,\n          pointerEvents: 'none'\n        }\n      }\n    }],\n    liveRegion: {\n      border: 0,\n      height: '1px',\n      margin: '-1px',\n      overflow: 'hidden',\n      padding: 0,\n      width: '1px',\n      position: 'absolute'\n    }\n  };\n};","map":{"version":3,"sources":["components/Calendar/Calendar.styles.ts"],"names":[],"mappings":"AACA,SAAS,SAAT,EAAoB,SAApB,EAA+B,aAA/B,QAAoD,2BAApD;AAEA,OAAO,IAAM,MAAM,GAAG,UAAC,KAAD,EAA2B;AACvC,MAAA,SAAS,GAAuE,KAAK,CAA5E,SAAT;AAAA,MAAW,KAAK,GAAgE,KAAK,CAArE,KAAhB;AAAA,MAAkB,kBAAkB,GAA4C,KAAK,CAAjD,kBAApC;AAAA,MAAsC,oBAAoB,GAAsB,KAAK,CAA3B,oBAA1D;AAAA,MAA4D,eAAe,GAAK,KAAK,CAAV,eAA3E;AACA,MAAA,OAAO,GAAK,KAAK,CAAV,OAAP;AAER,MAAI,UAAU,GAAG,kBAAkB,IAAI,oBAAtB,GAA6C,GAA7C,GAAmD,GAApE;;AACA,MAAI,eAAe,IAAI,kBAAvB,EAA2C;AACzC,IAAA,UAAU,IAAI,EAAd;AACD;;AAED,SAAO;AACL,IAAA,IAAI,EAAE,CACJ,SADI,EAEJ;AACE,MAAA,OAAO,EAAE,MADX;AAEE,MAAA,KAAK,EAAE;AAFT,KAFI,EAMJ,CAAC,oBAAD,IAAyB;AACvB,MAAA,aAAa,EAAE;AADQ,KANrB,EASJ,SATI,CADD;AAYL,IAAA,OAAO,EAAE;AACP,MAAA,GAAG,EAAE,CADE;AAEP,MAAA,WAAW,EAAE,WAFN;AAGP,MAAA,WAAW,EAAE,OAAO,CAAC;AAHd,KAZJ;AAiBL,IAAA,kBAAkB,EAAE,CAClB;AACE,MAAA,OAAO,EAAE,MADX;AAEE,MAAA,aAAa,EAAE;AAFjB,KADkB,CAjBf;AAuBL,IAAA,aAAa,EAAE,CACb,aAAa,CAAC,KAAD,EAAQ;AAAE,MAAA,KAAK,EAAE,CAAC;AAAV,KAAR,CADA,EAEb;AACE,MAAA,MAAM,EAAE,CADV;AAEE,MAAA,KAAK,EAAE,OAAO,CAAC,cAFjB;AAGE,MAAA,MAAM,EAAE,EAHV;AAIE,MAAA,UAAU,EAAE,EAJd;AAKE,MAAA,eAAe,EAAE,aALnB;AAME,MAAA,MAAM,EAAE,MANV;AAOE,MAAA,SAAS,EAAE,aAPb;AAQE,MAAA,OAAO,EAAE,OARX;AASE,MAAA,SAAS,EAAE,UATb;AAUE,MAAA,WAAW,EAAE,EAVf;AAWE,MAAA,SAAS,EAAE,CAXb;AAYE,MAAA,QAAQ,EAAE,SAAS,CAAC,KAZtB;AAaE,MAAA,UAAU,EAAE,SAbd;AAcE,MAAA,QAAQ,EAAE,SAdZ;AAeE,MAAA,SAAS,EAAE;AACT,iBAAS;AACP,UAAA,QAAQ,EAAE,SAAS,CAAC;AADb,SADA;AAIT,mBAAW;AACT,UAAA,KAAK,EAAE,OAAO,CAAC,YADN;AAET,UAAA,eAAe,EAAE,aAFR;AAGT,UAAA,MAAM,EAAE;AAHC,SAJF;AAST,oBAAY;AACV,UAAA,KAAK,EAAE,OAAO,CAAC;AADL,SATH;AAYT,sBAAc;AACZ,UAAA,KAAK,EAAE,OAAO,CAAC,kBADH;AAEZ,UAAA,aAAa,EAAE;AAFH;AAZL;AAfb,KAFa,CAvBV;AA2DL,IAAA,UAAU,EAAE;AACV,MAAA,MAAM,EAAE,CADE;AAEV,MAAA,MAAM,EAAE,KAFE;AAGV,MAAA,MAAM,EAAE,MAHE;AAIV,MAAA,QAAQ,EAAE,QAJA;AAKV,MAAA,OAAO,EAAE,CALC;AAMV,MAAA,KAAK,EAAE,KANG;AAOV,MAAA,QAAQ,EAAE;AAPA;AA3DP,GAAP;AAqED,CA9EM","sourcesContent":["import { ICalendarStyleProps, ICalendarStyles } from './Calendar.types';\nimport { normalize, FontSizes, getFocusStyle } from '@fluentui/style-utilities';\n\nexport const styles = (props: ICalendarStyleProps): ICalendarStyles => {\n  const { className, theme, isDayPickerVisible, isMonthPickerVisible, showWeekNumbers } = props;\n  const { palette } = theme;\n\n  let totalWidth = isDayPickerVisible && isMonthPickerVisible ? 440 : 220;\n  if (showWeekNumbers && isDayPickerVisible) {\n    totalWidth += 30;\n  }\n\n  return {\n    root: [\n      normalize,\n      {\n        display: 'flex',\n        width: totalWidth,\n      },\n      !isMonthPickerVisible && {\n        flexDirection: 'column',\n      },\n      className,\n    ],\n    divider: {\n      top: 0,\n      borderRight: '1px solid',\n      borderColor: palette.neutralLight,\n    },\n    monthPickerWrapper: [\n      {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n    ],\n    goTodayButton: [\n      getFocusStyle(theme, { inset: -1 }),\n      {\n        bottom: 0,\n        color: palette.neutralPrimary,\n        height: 30,\n        lineHeight: 30,\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxSizing: 'content-box',\n        padding: '0 4px',\n        alignSelf: 'flex-end',\n        marginRight: 16,\n        marginTop: 3,\n        fontSize: FontSizes.small,\n        fontFamily: 'inherit',\n        overflow: 'visible', // explicitly specify for IE11\n        selectors: {\n          '& div': {\n            fontSize: FontSizes.small,\n          },\n          '&:hover': {\n            color: palette.themePrimary,\n            backgroundColor: 'transparent',\n            cursor: 'pointer',\n          },\n          '&:active': {\n            color: palette.themeDark,\n          },\n          '&:disabled': {\n            color: palette.neutralTertiaryAlt,\n            pointerEvents: 'none',\n          },\n        },\n      },\n    ],\n    liveRegion: {\n      border: 0,\n      height: '1px',\n      margin: '-1px',\n      overflow: 'hidden',\n      padding: 0,\n      width: '1px',\n      position: 'absolute',\n    },\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
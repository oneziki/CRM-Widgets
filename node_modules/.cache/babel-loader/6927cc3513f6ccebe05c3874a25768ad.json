{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport { classNamesFunction, setPortalAttribute, setVirtualParent } from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer } from './Layer.notification';\nimport { useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nvar getClassNames = classNamesFunction();\nexport var LayerBase = React.forwardRef(function (props, ref) {\n  var _a = React.useState(),\n      layerElement = _a[0],\n      setLayerElement = _a[1];\n\n  var refLayerElement = React.useRef(layerElement);\n  refLayerElement.current = layerElement;\n  var rootRef = React.useRef(null);\n  var mergedRef = useMergedRefs(rootRef, ref);\n  var doc = useDocument();\n  var eventBubblingEnabled = props.eventBubblingEnabled,\n      styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      children = props.children,\n      hostId = props.hostId,\n      _b = props.onLayerDidMount,\n      onLayerDidMount = _b === void 0 ? function () {\n    return undefined;\n  } : _b,\n      // eslint-disable-next-line deprecation/deprecation\n  _c = props.onLayerMounted,\n      // eslint-disable-next-line deprecation/deprecation\n  onLayerMounted = _c === void 0 ? function () {\n    return undefined;\n  } : _c,\n      onLayerWillUnmount = props.onLayerWillUnmount,\n      insertFirst = props.insertFirst;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    isNotHost: !hostId\n  }); // Returns the user provided hostId props element, the default target selector,\n  // or undefined if document doesn't exist.\n\n  var getHost = function () {\n    if (!doc) {\n      return undefined;\n    }\n\n    if (hostId) {\n      return doc.getElementById(hostId);\n    } else {\n      var defaultHostSelector = getDefaultTarget();\n      return defaultHostSelector ? doc.querySelector(defaultHostSelector) : doc.body;\n    }\n  }; // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n\n\n  var removeLayerElement = function () {\n    onLayerWillUnmount === null || onLayerWillUnmount === void 0 ? void 0 : onLayerWillUnmount();\n    var elem = refLayerElement.current;\n\n    if (elem && elem.parentNode) {\n      var parentNode = elem.parentNode;\n\n      if (parentNode) {\n        parentNode.removeChild(elem);\n      }\n    }\n  }; // If a doc or host exists, it will remove and update layer parentNodes.\n\n\n  var createLayerElement = function () {\n    var host = getHost();\n\n    if (!doc || !host) {\n      return;\n    } // Remove and re-create any previous existing layer elements.\n\n\n    removeLayerElement();\n    var el = doc.createElement('div');\n    el.className = classNames.root;\n    setPortalAttribute(el);\n    setVirtualParent(el, rootRef.current);\n    insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n    setLayerElement(el);\n    onLayerMounted === null || onLayerMounted === void 0 ? void 0 : onLayerMounted();\n    onLayerDidMount === null || onLayerDidMount === void 0 ? void 0 : onLayerDidMount();\n  }; // eslint-disable-next-line no-restricted-properties\n\n\n  React.useLayoutEffect(function () {\n    createLayerElement(); // Check if the user provided a hostId prop and register the layer with the ID.\n\n    if (hostId) {\n      registerLayer(hostId, createLayerElement);\n    }\n\n    return function () {\n      removeLayerElement();\n\n      if (hostId) {\n        unregisterLayer(hostId, createLayerElement);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n  }, [hostId]);\n  useDebugWarnings(props);\n  return React.createElement(\"span\", {\n    className: \"ms-layer\",\n    ref: mergedRef\n  }, layerElement && ReactDOM.createPortal(\n  /* eslint-disable deprecation/deprecation */\n  React.createElement(Fabric, __assign({}, !eventBubblingEnabled && getFilteredEvents(), {\n    className: classNames.content\n  }), children),\n  /* eslint-enable deprecation/deprecation */\n  layerElement));\n});\nLayerBase.displayName = 'LayerBase';\nvar filteredEventProps;\n\nvar onFilterEvent = function (ev) {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (ev.eventPhase === Event.BUBBLING_PHASE && ev.type !== 'mouseenter' && ev.type !== 'mouseleave' && ev.type !== 'touchstart' && ev.type !== 'touchend') {\n    ev.stopPropagation();\n  }\n};\n\nfunction getFilteredEvents() {\n  if (!filteredEventProps) {\n    filteredEventProps = {};\n    ['onClick', 'onContextMenu', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOver', 'onMouseOut', 'onMouseUp', 'onTouchMove', 'onTouchStart', 'onTouchCancel', 'onTouchEnd', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onFocus', 'onBlur', 'onChange', 'onInput', 'onInvalid', 'onSubmit'].forEach(function (name) {\n      return filteredEventProps[name] = onFilterEvent;\n    });\n  }\n\n  return filteredEventProps;\n}\n\nfunction useDebugWarnings(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Layer',\n      props: props,\n      deprecations: {\n        onLayerMounted: 'onLayerDidMount'\n      }\n    });\n  }\n}","map":{"version":3,"sources":["components/Layer/Layer.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport { classNamesFunction, setPortalAttribute, setVirtualParent } from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer } from './Layer.notification';\nimport { useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\nexport const LayerBase: React.FunctionComponent<ILayerProps> = React.forwardRef<HTMLDivElement, ILayerProps>(\n  (props, ref) => {\n    const [layerElement, setLayerElement] = React.useState<HTMLDivElement | undefined>();\n    const refLayerElement = React.useRef(layerElement);\n    refLayerElement.current = layerElement;\n\n    const rootRef = React.useRef<HTMLSpanElement>(null);\n    const mergedRef = useMergedRefs(rootRef, ref);\n\n    const doc = useDocument();\n\n    const {\n      eventBubblingEnabled,\n      styles,\n      theme,\n      className,\n      children,\n      hostId,\n      onLayerDidMount = () => undefined,\n      // eslint-disable-next-line deprecation/deprecation\n      onLayerMounted = () => undefined,\n      onLayerWillUnmount,\n      insertFirst,\n    } = props;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !hostId,\n    });\n\n    // Returns the user provided hostId props element, the default target selector,\n    // or undefined if document doesn't exist.\n    const getHost = (): Node | undefined => {\n      if (!doc) {\n        return undefined;\n      }\n\n      if (hostId) {\n        return doc.getElementById(hostId) as Node;\n      } else {\n        const defaultHostSelector = getDefaultTarget();\n        return defaultHostSelector ? (doc.querySelector(defaultHostSelector) as Node) : doc.body;\n      }\n    };\n\n    // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n    const removeLayerElement = (): void => {\n      onLayerWillUnmount?.();\n\n      const elem = refLayerElement.current;\n      if (elem && elem.parentNode) {\n        const parentNode = elem.parentNode;\n        if (parentNode) {\n          parentNode.removeChild(elem);\n        }\n      }\n    };\n\n    // If a doc or host exists, it will remove and update layer parentNodes.\n    const createLayerElement = () => {\n      const host = getHost();\n\n      if (!doc || !host) {\n        return;\n      }\n\n      // Remove and re-create any previous existing layer elements.\n      removeLayerElement();\n\n      const el: HTMLDivElement = doc.createElement('div');\n\n      el.className = classNames.root!;\n      setPortalAttribute(el);\n      setVirtualParent(el, rootRef.current!);\n\n      insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n\n      setLayerElement(el);\n\n      onLayerMounted?.();\n      onLayerDidMount?.();\n    };\n\n    // eslint-disable-next-line no-restricted-properties\n    React.useLayoutEffect(() => {\n      createLayerElement();\n      // Check if the user provided a hostId prop and register the layer with the ID.\n      if (hostId) {\n        registerLayer(hostId, createLayerElement);\n      }\n\n      return () => {\n        removeLayerElement();\n\n        if (hostId) {\n          unregisterLayer(hostId, createLayerElement);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n    }, [hostId]);\n\n    useDebugWarnings(props);\n\n    return (\n      <span className=\"ms-layer\" ref={mergedRef}>\n        {layerElement &&\n          ReactDOM.createPortal(\n            /* eslint-disable deprecation/deprecation */\n            <Fabric {...(!eventBubblingEnabled && getFilteredEvents())} className={classNames.content}>\n              {children}\n            </Fabric>,\n            /* eslint-enable deprecation/deprecation */\n            layerElement,\n          )}\n      </span>\n    );\n  },\n);\nLayerBase.displayName = 'LayerBase';\n\nlet filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement, Event>) => void };\n\nconst onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (\n    ev.eventPhase === Event.BUBBLING_PHASE &&\n    ev.type !== 'mouseenter' &&\n    ev.type !== 'mouseleave' &&\n    ev.type !== 'touchstart' &&\n    ev.type !== 'touchend'\n  ) {\n    ev.stopPropagation();\n  }\n};\n\nfunction getFilteredEvents() {\n  if (!filteredEventProps) {\n    filteredEventProps = {} as any;\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onTouchMove',\n      'onTouchStart',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit',\n    ].forEach(name => (filteredEventProps[name] = onFilterEvent));\n  }\n  return filteredEventProps;\n}\n\nfunction useDebugWarnings(props: ILayerProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Layer',\n      props,\n      deprecations: { onLayerMounted: 'onLayerDidMount' },\n    });\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { compareDatePart } from '../dateMath/dateMath';\n/**\n * Checks if `date` happens later than max date\n * @param date - date to check\n * @param options - object with max date to check against\n */\n\nexport var isAfterMaxDate = function (date, options) {\n  var maxDate = options.maxDate;\n  return maxDate ? compareDatePart(date, maxDate) >= 1 : false;\n};","map":{"version":3,"sources":["dateGrid/isAfterMaxDate.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,sBAAhC;AAEA;;;;AAIG;;AACH,OAAO,IAAM,cAAc,GAAG,UAAC,IAAD,EAAa,OAAb,EAA6C;AACjE,MAAA,OAAO,GAAK,OAAO,CAAZ,OAAP;AACR,SAAO,OAAO,GAAG,eAAe,CAAC,IAAD,EAAO,OAAP,CAAf,IAAkC,CAArC,GAAyC,KAAvD;AACD,CAHM","sourcesContent":["import { IRestrictedDatesOptions } from './dateGrid.types';\nimport { compareDatePart } from '../dateMath/dateMath';\n\n/**\n * Checks if `date` happens later than max date\n * @param date - date to check\n * @param options - object with max date to check against\n */\nexport const isAfterMaxDate = (date: Date, options: IRestrictedDatesOptions): boolean => {\n  const { maxDate } = options;\n  return maxDate ? compareDatePart(date, maxDate) >= 1 : false;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}